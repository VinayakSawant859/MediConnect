/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { type AccordionGroupChangeEventDetail, type BreadcrumbCollapsedClickEventDetail, type CheckboxChangeEventDetail, type DatetimeChangeEventDetail, type InputChangeEventDetail, type InputInputEventDetail, type IonAccordionGroupCustomEvent, type IonBreadcrumbsCustomEvent, type IonCheckboxCustomEvent, type IonContentCustomEvent, type IonDatetimeCustomEvent, type IonInputCustomEvent, type IonPickerColumnCustomEvent, type IonRadioGroupCustomEvent, type IonRangeCustomEvent, type IonRefresherCustomEvent, type IonReorderGroupCustomEvent, type IonSearchbarCustomEvent, type IonSegmentCustomEvent, type IonSelectCustomEvent, type IonTextareaCustomEvent, type IonToggleCustomEvent, type ItemReorderEventDetail, type PickerColumnChangeEventDetail, type RadioGroupChangeEventDetail, type RangeChangeEventDetail, type RangeKnobMoveEndEventDetail, type RangeKnobMoveStartEventDetail, type RefresherEventDetail, type ScrollBaseDetail, type ScrollDetail, type SearchbarChangeEventDetail, type SearchbarInputEventDetail, type SegmentChangeEventDetail, type SelectChangeEventDetail, type TextareaChangeEventDetail, type TextareaInputEventDetail, type ToggleChangeEventDetail } from "@ionic/core";
import { IonAccordionGroup as IonAccordionGroupElement } from "@ionic/core/components/ion-accordion-group.js";
import { IonAccordion as IonAccordionElement } from "@ionic/core/components/ion-accordion.js";
import { IonAvatar as IonAvatarElement } from "@ionic/core/components/ion-avatar.js";
import { IonBackdrop as IonBackdropElement } from "@ionic/core/components/ion-backdrop.js";
import { IonBadge as IonBadgeElement } from "@ionic/core/components/ion-badge.js";
import { IonBreadcrumbs as IonBreadcrumbsElement } from "@ionic/core/components/ion-breadcrumbs.js";
import { IonButtons as IonButtonsElement } from "@ionic/core/components/ion-buttons.js";
import { IonCardContent as IonCardContentElement } from "@ionic/core/components/ion-card-content.js";
import { IonCardHeader as IonCardHeaderElement } from "@ionic/core/components/ion-card-header.js";
import { IonCardSubtitle as IonCardSubtitleElement } from "@ionic/core/components/ion-card-subtitle.js";
import { IonCardTitle as IonCardTitleElement } from "@ionic/core/components/ion-card-title.js";
import { IonCheckbox as IonCheckboxElement } from "@ionic/core/components/ion-checkbox.js";
import { IonChip as IonChipElement } from "@ionic/core/components/ion-chip.js";
import { IonCol as IonColElement } from "@ionic/core/components/ion-col.js";
import { IonContent as IonContentElement } from "@ionic/core/components/ion-content.js";
import { IonDatetimeButton as IonDatetimeButtonElement } from "@ionic/core/components/ion-datetime-button.js";
import { IonDatetime as IonDatetimeElement } from "@ionic/core/components/ion-datetime.js";
import { IonFabList as IonFabListElement } from "@ionic/core/components/ion-fab-list.js";
import { IonFab as IonFabElement } from "@ionic/core/components/ion-fab.js";
import { IonFooter as IonFooterElement } from "@ionic/core/components/ion-footer.js";
import { IonGrid as IonGridElement } from "@ionic/core/components/ion-grid.js";
import { IonHeader as IonHeaderElement } from "@ionic/core/components/ion-header.js";
import { IonImg as IonImgElement } from "@ionic/core/components/ion-img.js";
import { IonInfiniteScrollContent as IonInfiniteScrollContentElement } from "@ionic/core/components/ion-infinite-scroll-content.js";
import { IonInfiniteScroll as IonInfiniteScrollElement } from "@ionic/core/components/ion-infinite-scroll.js";
import { IonInputPasswordToggle as IonInputPasswordToggleElement } from "@ionic/core/components/ion-input-password-toggle.js";
import { IonInput as IonInputElement } from "@ionic/core/components/ion-input.js";
import { IonItemDivider as IonItemDividerElement } from "@ionic/core/components/ion-item-divider.js";
import { IonItemGroup as IonItemGroupElement } from "@ionic/core/components/ion-item-group.js";
import { IonItemOptions as IonItemOptionsElement } from "@ionic/core/components/ion-item-options.js";
import { IonItemSliding as IonItemSlidingElement } from "@ionic/core/components/ion-item-sliding.js";
import { IonLabel as IonLabelElement } from "@ionic/core/components/ion-label.js";
import { IonListHeader as IonListHeaderElement } from "@ionic/core/components/ion-list-header.js";
import { IonList as IonListElement } from "@ionic/core/components/ion-list.js";
import { IonMenuButton as IonMenuButtonElement } from "@ionic/core/components/ion-menu-button.js";
import { IonMenuToggle as IonMenuToggleElement } from "@ionic/core/components/ion-menu-toggle.js";
import { IonMenu as IonMenuElement } from "@ionic/core/components/ion-menu.js";
import { IonNavLink as IonNavLinkElement } from "@ionic/core/components/ion-nav-link.js";
import { IonNav as IonNavElement } from "@ionic/core/components/ion-nav.js";
import { IonNote as IonNoteElement } from "@ionic/core/components/ion-note.js";
import { IonPickerColumnOption as IonPickerColumnOptionElement } from "@ionic/core/components/ion-picker-column-option.js";
import { IonPickerColumn as IonPickerColumnElement } from "@ionic/core/components/ion-picker-column.js";
import { IonPicker as IonPickerElement } from "@ionic/core/components/ion-picker.js";
import { IonProgressBar as IonProgressBarElement } from "@ionic/core/components/ion-progress-bar.js";
import { IonRadioGroup as IonRadioGroupElement } from "@ionic/core/components/ion-radio-group.js";
import { IonRadio as IonRadioElement } from "@ionic/core/components/ion-radio.js";
import { IonRange as IonRangeElement } from "@ionic/core/components/ion-range.js";
import { IonRefresherContent as IonRefresherContentElement } from "@ionic/core/components/ion-refresher-content.js";
import { IonRefresher as IonRefresherElement } from "@ionic/core/components/ion-refresher.js";
import { IonReorderGroup as IonReorderGroupElement } from "@ionic/core/components/ion-reorder-group.js";
import { IonReorder as IonReorderElement } from "@ionic/core/components/ion-reorder.js";
import { IonRippleEffect as IonRippleEffectElement } from "@ionic/core/components/ion-ripple-effect.js";
import { IonRow as IonRowElement } from "@ionic/core/components/ion-row.js";
import { IonSearchbar as IonSearchbarElement } from "@ionic/core/components/ion-searchbar.js";
import { IonSegmentButton as IonSegmentButtonElement } from "@ionic/core/components/ion-segment-button.js";
import { IonSegment as IonSegmentElement } from "@ionic/core/components/ion-segment.js";
import { IonSelectOption as IonSelectOptionElement } from "@ionic/core/components/ion-select-option.js";
import { IonSelect as IonSelectElement } from "@ionic/core/components/ion-select.js";
import { IonSkeletonText as IonSkeletonTextElement } from "@ionic/core/components/ion-skeleton-text.js";
import { IonSpinner as IonSpinnerElement } from "@ionic/core/components/ion-spinner.js";
import { IonSplitPane as IonSplitPaneElement } from "@ionic/core/components/ion-split-pane.js";
import { IonTab as IonTabElement } from "@ionic/core/components/ion-tab.js";
import { IonText as IonTextElement } from "@ionic/core/components/ion-text.js";
import { IonTextarea as IonTextareaElement } from "@ionic/core/components/ion-textarea.js";
import { IonThumbnail as IonThumbnailElement } from "@ionic/core/components/ion-thumbnail.js";
import { IonTitle as IonTitleElement } from "@ionic/core/components/ion-title.js";
import { IonToggle as IonToggleElement } from "@ionic/core/components/ion-toggle.js";
import { IonToolbar as IonToolbarElement } from "@ionic/core/components/ion-toolbar.js";
import type { EventName } from '@stencil/react-output-target/runtime';
export declare const IonAccordion: import("@lit/react").ReactWebComponent<IonAccordionElement, {}>;
type IonAccordionGroupEvents = {
    onIonChange: EventName<IonAccordionGroupCustomEvent<AccordionGroupChangeEventDetail>>;
};
export declare const IonAccordionGroup: import("@lit/react").ReactWebComponent<IonAccordionGroupElement, IonAccordionGroupEvents>;
export declare const IonAvatar: import("@lit/react").ReactWebComponent<IonAvatarElement, {}>;
type IonBackdropEvents = {
    onIonBackdropTap: EventName<CustomEvent<void>>;
};
export declare const IonBackdrop: import("@lit/react").ReactWebComponent<IonBackdropElement, IonBackdropEvents>;
export declare const IonBadge: import("@lit/react").ReactWebComponent<IonBadgeElement, {}>;
type IonBreadcrumbsEvents = {
    onIonCollapsedClick: EventName<IonBreadcrumbsCustomEvent<BreadcrumbCollapsedClickEventDetail>>;
};
export declare const IonBreadcrumbs: import("@lit/react").ReactWebComponent<IonBreadcrumbsElement, IonBreadcrumbsEvents>;
export declare const IonButtons: import("@lit/react").ReactWebComponent<IonButtonsElement, {}>;
export declare const IonCardContent: import("@lit/react").ReactWebComponent<IonCardContentElement, {}>;
export declare const IonCardHeader: import("@lit/react").ReactWebComponent<IonCardHeaderElement, {}>;
export declare const IonCardSubtitle: import("@lit/react").ReactWebComponent<IonCardSubtitleElement, {}>;
export declare const IonCardTitle: import("@lit/react").ReactWebComponent<IonCardTitleElement, {}>;
type IonCheckboxEvents = {
    onIonChange: EventName<IonCheckboxCustomEvent<CheckboxChangeEventDetail>>;
    onIonFocus: EventName<CustomEvent<void>>;
    onIonBlur: EventName<CustomEvent<void>>;
};
export declare const IonCheckbox: import("@lit/react").ReactWebComponent<IonCheckboxElement, IonCheckboxEvents>;
export declare const IonChip: import("@lit/react").ReactWebComponent<IonChipElement, {}>;
export declare const IonCol: import("@lit/react").ReactWebComponent<IonColElement, {}>;
type IonContentEvents = {
    onIonScrollStart: EventName<IonContentCustomEvent<ScrollBaseDetail>>;
    onIonScroll: EventName<IonContentCustomEvent<ScrollDetail>>;
    onIonScrollEnd: EventName<IonContentCustomEvent<ScrollBaseDetail>>;
};
export declare const IonContent: import("@lit/react").ReactWebComponent<IonContentElement, IonContentEvents>;
type IonDatetimeEvents = {
    onIonCancel: EventName<CustomEvent<void>>;
    onIonChange: EventName<IonDatetimeCustomEvent<DatetimeChangeEventDetail>>;
    onIonFocus: EventName<CustomEvent<void>>;
    onIonBlur: EventName<CustomEvent<void>>;
};
export declare const IonDatetime: import("@lit/react").ReactWebComponent<IonDatetimeElement, IonDatetimeEvents>;
export declare const IonDatetimeButton: import("@lit/react").ReactWebComponent<IonDatetimeButtonElement, {}>;
export declare const IonFab: import("@lit/react").ReactWebComponent<IonFabElement, {}>;
export declare const IonFabList: import("@lit/react").ReactWebComponent<IonFabListElement, {}>;
export declare const IonFooter: import("@lit/react").ReactWebComponent<IonFooterElement, {}>;
export declare const IonGrid: import("@lit/react").ReactWebComponent<IonGridElement, {}>;
export declare const IonHeader: import("@lit/react").ReactWebComponent<IonHeaderElement, {}>;
type IonImgEvents = {
    onIonImgWillLoad: EventName<CustomEvent<void>>;
    onIonImgDidLoad: EventName<CustomEvent<void>>;
    onIonError: EventName<CustomEvent<void>>;
};
export declare const IonImg: import("@lit/react").ReactWebComponent<IonImgElement, IonImgEvents>;
type IonInfiniteScrollEvents = {
    onIonInfinite: EventName<CustomEvent<void>>;
};
export declare const IonInfiniteScroll: import("@lit/react").ReactWebComponent<IonInfiniteScrollElement, IonInfiniteScrollEvents>;
export declare const IonInfiniteScrollContent: import("@lit/react").ReactWebComponent<IonInfiniteScrollContentElement, {}>;
type IonInputEvents = {
    onIonInput: EventName<IonInputCustomEvent<InputInputEventDetail>>;
    onIonChange: EventName<IonInputCustomEvent<InputChangeEventDetail>>;
    onIonBlur: EventName<IonInputCustomEvent<FocusEvent>>;
    onIonFocus: EventName<IonInputCustomEvent<FocusEvent>>;
};
export declare const IonInput: import("@lit/react").ReactWebComponent<IonInputElement, IonInputEvents>;
export declare const IonInputPasswordToggle: import("@lit/react").ReactWebComponent<IonInputPasswordToggleElement, {}>;
export declare const IonItemDivider: import("@lit/react").ReactWebComponent<IonItemDividerElement, {}>;
export declare const IonItemGroup: import("@lit/react").ReactWebComponent<IonItemGroupElement, {}>;
type IonItemOptionsEvents = {
    onIonSwipe: EventName<CustomEvent<any>>;
};
export declare const IonItemOptions: import("@lit/react").ReactWebComponent<IonItemOptionsElement, IonItemOptionsEvents>;
type IonItemSlidingEvents = {
    onIonDrag: EventName<CustomEvent<any>>;
};
export declare const IonItemSliding: import("@lit/react").ReactWebComponent<IonItemSlidingElement, IonItemSlidingEvents>;
export declare const IonLabel: import("@lit/react").ReactWebComponent<IonLabelElement, {}>;
export declare const IonList: import("@lit/react").ReactWebComponent<IonListElement, {}>;
export declare const IonListHeader: import("@lit/react").ReactWebComponent<IonListHeaderElement, {}>;
type IonMenuEvents = {
    onIonWillOpen: EventName<CustomEvent<void>>;
    onIonWillClose: EventName<CustomEvent<void>>;
    onIonDidOpen: EventName<CustomEvent<void>>;
    onIonDidClose: EventName<CustomEvent<void>>;
};
export declare const IonMenu: import("@lit/react").ReactWebComponent<IonMenuElement, IonMenuEvents>;
export declare const IonMenuButton: import("@lit/react").ReactWebComponent<IonMenuButtonElement, {}>;
export declare const IonMenuToggle: import("@lit/react").ReactWebComponent<IonMenuToggleElement, {}>;
type IonNavEvents = {
    onIonNavWillChange: EventName<CustomEvent<void>>;
    onIonNavDidChange: EventName<CustomEvent<void>>;
};
export declare const IonNav: import("@lit/react").ReactWebComponent<IonNavElement, IonNavEvents>;
export declare const IonNavLink: import("@lit/react").ReactWebComponent<IonNavLinkElement, {}>;
export declare const IonNote: import("@lit/react").ReactWebComponent<IonNoteElement, {}>;
export declare const IonPicker: import("@lit/react").ReactWebComponent<IonPickerElement, {}>;
type IonPickerColumnEvents = {
    onIonChange: EventName<IonPickerColumnCustomEvent<PickerColumnChangeEventDetail>>;
};
export declare const IonPickerColumn: import("@lit/react").ReactWebComponent<IonPickerColumnElement, IonPickerColumnEvents>;
export declare const IonPickerColumnOption: import("@lit/react").ReactWebComponent<IonPickerColumnOptionElement, {}>;
export declare const IonProgressBar: import("@lit/react").ReactWebComponent<IonProgressBarElement, {}>;
type IonRadioEvents = {
    onIonFocus: EventName<CustomEvent<void>>;
    onIonBlur: EventName<CustomEvent<void>>;
};
export declare const IonRadio: import("@lit/react").ReactWebComponent<IonRadioElement, IonRadioEvents>;
type IonRadioGroupEvents = {
    onIonChange: EventName<IonRadioGroupCustomEvent<RadioGroupChangeEventDetail>>;
};
export declare const IonRadioGroup: import("@lit/react").ReactWebComponent<IonRadioGroupElement, IonRadioGroupEvents>;
type IonRangeEvents = {
    onIonChange: EventName<IonRangeCustomEvent<RangeChangeEventDetail>>;
    onIonInput: EventName<IonRangeCustomEvent<RangeChangeEventDetail>>;
    onIonFocus: EventName<CustomEvent<void>>;
    onIonBlur: EventName<CustomEvent<void>>;
    onIonKnobMoveStart: EventName<IonRangeCustomEvent<RangeKnobMoveStartEventDetail>>;
    onIonKnobMoveEnd: EventName<IonRangeCustomEvent<RangeKnobMoveEndEventDetail>>;
};
export declare const IonRange: import("@lit/react").ReactWebComponent<IonRangeElement, IonRangeEvents>;
type IonRefresherEvents = {
    onIonRefresh: EventName<IonRefresherCustomEvent<RefresherEventDetail>>;
    onIonPull: EventName<CustomEvent<void>>;
    onIonStart: EventName<CustomEvent<void>>;
};
export declare const IonRefresher: import("@lit/react").ReactWebComponent<IonRefresherElement, IonRefresherEvents>;
export declare const IonRefresherContent: import("@lit/react").ReactWebComponent<IonRefresherContentElement, {}>;
export declare const IonReorder: import("@lit/react").ReactWebComponent<IonReorderElement, {}>;
type IonReorderGroupEvents = {
    onIonItemReorder: EventName<IonReorderGroupCustomEvent<ItemReorderEventDetail>>;
};
export declare const IonReorderGroup: import("@lit/react").ReactWebComponent<IonReorderGroupElement, IonReorderGroupEvents>;
export declare const IonRippleEffect: import("@lit/react").ReactWebComponent<IonRippleEffectElement, {}>;
export declare const IonRow: import("@lit/react").ReactWebComponent<IonRowElement, {}>;
type IonSearchbarEvents = {
    onIonInput: EventName<IonSearchbarCustomEvent<SearchbarInputEventDetail>>;
    onIonChange: EventName<IonSearchbarCustomEvent<SearchbarChangeEventDetail>>;
    onIonCancel: EventName<CustomEvent<void>>;
    onIonClear: EventName<CustomEvent<void>>;
    onIonBlur: EventName<CustomEvent<void>>;
    onIonFocus: EventName<CustomEvent<void>>;
};
export declare const IonSearchbar: import("@lit/react").ReactWebComponent<IonSearchbarElement, IonSearchbarEvents>;
type IonSegmentEvents = {
    onIonChange: EventName<IonSegmentCustomEvent<SegmentChangeEventDetail>>;
};
export declare const IonSegment: import("@lit/react").ReactWebComponent<IonSegmentElement, IonSegmentEvents>;
export declare const IonSegmentButton: import("@lit/react").ReactWebComponent<IonSegmentButtonElement, {}>;
type IonSelectEvents = {
    onIonChange: EventName<IonSelectCustomEvent<SelectChangeEventDetail>>;
    onIonCancel: EventName<CustomEvent<void>>;
    onIonDismiss: EventName<CustomEvent<void>>;
    onIonFocus: EventName<CustomEvent<void>>;
    onIonBlur: EventName<CustomEvent<void>>;
};
export declare const IonSelect: import("@lit/react").ReactWebComponent<IonSelectElement, IonSelectEvents>;
export declare const IonSelectOption: import("@lit/react").ReactWebComponent<IonSelectOptionElement, {}>;
export declare const IonSkeletonText: import("@lit/react").ReactWebComponent<IonSkeletonTextElement, {}>;
export declare const IonSpinner: import("@lit/react").ReactWebComponent<IonSpinnerElement, {}>;
type IonSplitPaneEvents = {
    onIonSplitPaneVisible: EventName<CustomEvent<{
        visible: boolean;
    }>>;
};
export declare const IonSplitPane: import("@lit/react").ReactWebComponent<IonSplitPaneElement, IonSplitPaneEvents>;
export declare const IonTab: import("@lit/react").ReactWebComponent<IonTabElement, {}>;
export declare const IonText: import("@lit/react").ReactWebComponent<IonTextElement, {}>;
type IonTextareaEvents = {
    onIonChange: EventName<IonTextareaCustomEvent<TextareaChangeEventDetail>>;
    onIonInput: EventName<IonTextareaCustomEvent<TextareaInputEventDetail>>;
    onIonBlur: EventName<IonTextareaCustomEvent<FocusEvent>>;
    onIonFocus: EventName<IonTextareaCustomEvent<FocusEvent>>;
};
export declare const IonTextarea: import("@lit/react").ReactWebComponent<IonTextareaElement, IonTextareaEvents>;
export declare const IonThumbnail: import("@lit/react").ReactWebComponent<IonThumbnailElement, {}>;
export declare const IonTitle: import("@lit/react").ReactWebComponent<IonTitleElement, {}>;
type IonToggleEvents = {
    onIonChange: EventName<IonToggleCustomEvent<ToggleChangeEventDetail>>;
    onIonFocus: EventName<CustomEvent<void>>;
    onIonBlur: EventName<CustomEvent<void>>;
};
export declare const IonToggle: import("@lit/react").ReactWebComponent<IonToggleElement, IonToggleEvents>;
export declare const IonToolbar: import("@lit/react").ReactWebComponent<IonToolbarElement, {}>;
export {};
