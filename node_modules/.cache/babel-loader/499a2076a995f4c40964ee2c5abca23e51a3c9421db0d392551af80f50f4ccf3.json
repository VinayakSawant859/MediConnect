{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\test\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css'; // Ensure your CSS file contains necessary styles for the eye icon.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n    if (username === 'Mediconnect' && password === 'Mediconnect') {\n      setPasswordError(false);\n      navigate('/chatbot');\n    } else {\n      setPasswordError(true);\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        placeholder: \"Enter your username\",\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\" // Toggle input type\n          ,\n          value: password,\n          placeholder: \"Enter your password\",\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"toggle-password\",\n          onClick: togglePasswordVisibility,\n          \"aria-label\": \"Toggle Password Visibility\",\n          children: [showPassword ? 'üëÅÔ∏è' : 'üôà', \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: \"Invalid credentials. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"lmgxLKnhxu59fgffQ7stqFXyv80=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","passwordError","setPasswordError","showPassword","setShowPassword","navigate","handleLogin","e","preventDefault","togglePasswordVisibility","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","placeholder","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/test/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css'; // Ensure your CSS file contains necessary styles for the eye icon.\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (username === 'Mediconnect' && password === 'Mediconnect') {\r\n      setPasswordError(false); \r\n      navigate('/chatbot'); \r\n    } else {\r\n      setPasswordError(true);\r\n    }\r\n  };\r\n\r\n  const togglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          placeholder=\"Enter your username\"\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <label>Password</label>\r\n        <div className=\"password-container\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"} // Toggle input type\r\n            value={password}\r\n            placeholder=\"Enter your password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button\r\n            type=\"button\"\r\n            className=\"toggle-password\"\r\n            onClick={togglePasswordVisibility}\r\n            aria-label=\"Toggle Password Visibility\"\r\n          >\r\n            {showPassword ? 'üëÅÔ∏è' : 'üôà'} {/* Eye icons */}\r\n          </button>\r\n        </div>\r\n        {passwordError && <p className=\"error-message\">Invalid credentials. Please try again.</p>}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}