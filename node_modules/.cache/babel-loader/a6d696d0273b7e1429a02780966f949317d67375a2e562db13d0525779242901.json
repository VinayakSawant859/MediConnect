{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\test\\\\src\\\\firebase\\\\PhoneSignin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-input-2\";\nimport 'react-phone-input-2/lib/style.css';\nimport \"./phone.css\";\nimport { MdTextFields } from \"react-icons/md\";\nimport { GiSmallFire } from \"react-icons/gi\";\nimport { multiFactor, PhoneAuthProvider, PhoneMultiFactorGenerator, RecaptchaVerifier } from \"firebase/auth\";\nimport { auth } from \"./setup\";\nimport { signInWithPhoneNumber } from \"firebase/auth\";\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PhoneSignin() {\n  _s();\n  const [phone, setPhone] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const sendOtp = async () => {\n    try {\n      const recaptchaVerifier = new RecaptchaVerifier('recaptcha-container-id', undefined, auth);\n      multiFactor(user).getSession().then(function (multiFactorSession) {\n        // Specify the phone number and pass the MFA session.\n        const phoneInfoOptions = {\n          phoneNumber: phone,\n          session: multiFactorSession\n        };\n        const phoneAuthProvider = new PhoneAuthProvider(auth);\n\n        // Send SMS verification code.\n        return phoneAuthProvider.verifyPhoneNumber(phoneInfoOptions, recaptchaVerifier);\n      }).then(function (verificationId) {\n        // Ask user for the verification code. Then:\n        const cred = PhoneAuthProvider.credential(verificationId, otp);\n        const multiFactorAssertion = PhoneMultiFactorGenerator.assertion(cred);\n\n        // Complete enrollment.\n        return multiFactor(user).enroll(multiFactorAssertion, \"mfaDisplayName\");\n      });\n      // const confirmation = signInWithPhoneNumber(auth,phone,recaptcha)\n      // setUser(confirmation)\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const verifyOtp = async () => {\n    try {\n      const data = await user.confirm(otp);\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"phone-signin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phone-content\",\n      children: [/*#__PURE__*/_jsxDEV(PhoneInput, {\n        country: 'us',\n        value: phone,\n        onChange: phone => setPhone(\"+\" + phone)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendOtp,\n        sx: {\n          marginTop: \"10px\"\n        },\n        variant: \"contained \",\n        children: \"Send OTP \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        id: \" recaptcha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setOtp(e.target.value),\n        \"aria-label\": \"Enter OTP \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verifyOtp,\n        sx: {\n          marginTop: \"10px\"\n        },\n        variant: \"contained\",\n        color: \"success \",\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(PhoneSignin, \"DVwNo85jMTvOThBljoEtALf7Y1g=\");\n_c = PhoneSignin;\nexport default PhoneSignin;\nvar _c;\n$RefreshReg$(_c, \"PhoneSignin\");","map":{"version":3,"names":["React","useState","PhoneInput","MdTextFields","GiSmallFire","multiFactor","PhoneAuthProvider","PhoneMultiFactorGenerator","RecaptchaVerifier","auth","signInWithPhoneNumber","firebase","jsxDEV","_jsxDEV","PhoneSignin","_s","phone","setPhone","user","setUser","otp","setOtp","sendOtp","recaptchaVerifier","undefined","getSession","then","multiFactorSession","phoneInfoOptions","phoneNumber","session","phoneAuthProvider","verifyPhoneNumber","verificationId","cred","credential","multiFactorAssertion","assertion","enroll","err","console","error","verifyOtp","data","confirm","log","className","children","country","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","sx","marginTop","variant","style","id","e","target","color","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/test/src/firebase/PhoneSignin.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport 'react-phone-input-2/lib/style.css'\r\nimport \"./phone.css\"\r\nimport { MdTextFields } from \"react-icons/md\";\r\nimport { GiSmallFire } from \"react-icons/gi\";\r\nimport {\r\n    multiFactor, PhoneAuthProvider, PhoneMultiFactorGenerator,\r\n    RecaptchaVerifier\r\n} from \"firebase/auth\";\r\nimport { auth } from \"./setup\";\r\nimport { signInWithPhoneNumber } from \"firebase/auth\";\r\n\r\nimport firebase from 'firebase'\r\n\r\n function PhoneSignin() {\r\n\r\n    const [phone,setPhone] = useState(\"\")\r\n    const [user, setUser] = useState(\"\")\r\n    const [otp, setOtp] =useState (\"\")\r\n\r\n    const sendOtp =async()=>{\r\n        try{\r\n            const recaptchaVerifier = new RecaptchaVerifier('recaptcha-container-id', undefined, auth);\r\n            multiFactor(user).getSession()\r\n                .then(function (multiFactorSession) {\r\n                    // Specify the phone number and pass the MFA session.\r\n                    const phoneInfoOptions = {\r\n                        phoneNumber: phone,\r\n                        session: multiFactorSession\r\n                    };\r\n            \r\n                    const phoneAuthProvider = new PhoneAuthProvider(auth);\r\n            \r\n                    // Send SMS verification code.\r\n                    return phoneAuthProvider.verifyPhoneNumber(phoneInfoOptions, recaptchaVerifier);\r\n                }).then(function (verificationId) {\r\n                    // Ask user for the verification code. Then:\r\n                    const cred = PhoneAuthProvider.credential(verificationId, otp);\r\n                    const multiFactorAssertion = PhoneMultiFactorGenerator.assertion(cred);\r\n            \r\n                    // Complete enrollment.\r\n                    return multiFactor(user).enroll(multiFactorAssertion, \"mfaDisplayName\");\r\n                });\r\n            // const confirmation = signInWithPhoneNumber(auth,phone,recaptcha)\r\n            // setUser(confirmation)\r\n        }catch(err){\r\n            console.error(err)\r\n        }\r\n      \r\n    }\r\n\r\n    const verifyOtp=async()=>{\r\n        try{\r\n            const data = await user.confirm(otp)\r\n            console.log(data)\r\n        }catch(err)\r\n        {\r\n            console.error(err) \r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"phone-signin\">\r\n            <div className=\"phone-content\">\r\n            <PhoneInput\r\n                country={'us'}\r\n                 value={phone}\r\n                 onChange={(phone)=>setPhone(\"+\"  + phone  )}\r\n            />\r\n        <button onClick={sendOtp} sx= {{marginTop:\"10px\"}}   variant='contained '>Send OTP </button>\r\n        <div style={{marginTop:\"10px\"}}  id=\" recaptcha\">\r\n\r\n        </div>\r\n        <br/>\r\n\r\n        <input onChange={(e)=> setOtp(e.target.value)}  aria-label=\"Enter OTP \"/>\r\n        <br/>\r\n            <button onClick={verifyOtp} sx={{marginTop:\"10px\"}}   variant=\"contained\" color=\"success \">Verify OTP</button>\r\n            </div>\r\n            \r\n        </div> \r\n ) \r\n}\r\n\r\nexport default PhoneSignin"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}