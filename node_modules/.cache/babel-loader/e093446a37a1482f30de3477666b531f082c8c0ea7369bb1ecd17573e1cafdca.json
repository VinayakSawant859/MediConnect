{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\test\\\\src\\\\Prescription.js\",\n  _s = $RefreshSig$();\n// Prescription.js\nimport React from \"react\";\nimport { jsPDF } from \"jspdf\";\nimport { usePrescription } from \"./PrescriptionContext\"; // Import the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Prescription = ({\n  symptoms,\n  remedies,\n  medications\n}) => {\n  _s();\n  const {\n    updatePrescription\n  } = usePrescription(); // Access context's update function\n\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(20);\n    doc.text(\"MediConnect - Prescription\", 10, 20);\n    doc.setFontSize(12);\n    doc.text(`Symptoms: ${symptoms}`, 10, 40);\n    doc.text(\"Suggested Remedies:\", 10, 70);\n    if (remedies.length > 0) {\n      remedies.forEach((remedy, index) => {\n        doc.text(`${index + 1}. ${remedy}`, 10, 80 + index * 10);\n      });\n    }\n    doc.text(\"Suggested Medications:\", 10, 120);\n    if (medications.length > 0) {\n      medications.forEach((medication, index) => {\n        doc.text(`${index + 1}. ${medication.name} - ${medication.dosage || \"As directed\"}`, 10, 130 + index * 10);\n      });\n    }\n    doc.setFontSize(20);\n    doc.text(\"Generated by Team MediConnect\", 10, 280);\n\n    // Save the PDF\n    doc.save(\"Prescription.pdf\");\n\n    // Update the prescription context with the data\n    updatePrescription({\n      symptoms,\n      remedies,\n      medications\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generatePDF,\n      className: \"generate-pdf-btn\",\n      children: \"Download Prescription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Prescription, \"Akr/HbBQi9FIZBIjxMaT3l7nk58=\", false, function () {\n  return [usePrescription];\n});\n_c = Prescription;\nexport default Prescription;\nvar _c;\n$RefreshReg$(_c, \"Prescription\");","map":{"version":3,"names":["React","jsPDF","usePrescription","jsxDEV","_jsxDEV","Prescription","symptoms","remedies","medications","_s","updatePrescription","generatePDF","doc","setFontSize","text","length","forEach","remedy","index","medication","name","dosage","save","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/test/src/Prescription.js"],"sourcesContent":["// Prescription.js\r\nimport React from \"react\";\r\nimport { jsPDF } from \"jspdf\";\r\nimport { usePrescription } from \"./PrescriptionContext\";  // Import the context\r\n\r\nconst Prescription = ({ symptoms, remedies, medications }) => {\r\n  const { updatePrescription } = usePrescription();  // Access context's update function\r\n\r\n  const generatePDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(20);\r\n    doc.text(\"MediConnect - Prescription\", 10, 20);\r\n    doc.setFontSize(12);\r\n    doc.text(`Symptoms: ${symptoms}`, 10, 40);\r\n\r\n    doc.text(\"Suggested Remedies:\", 10, 70);\r\n    if (remedies.length > 0) {\r\n      remedies.forEach((remedy, index) => {\r\n        doc.text(`${index + 1}. ${remedy}`, 10, 80 + index * 10);\r\n      });\r\n    }\r\n\r\n    doc.text(\"Suggested Medications:\", 10, 120);\r\n    if (medications.length > 0) {\r\n      medications.forEach((medication, index) => {\r\n        doc.text(`${index + 1}. ${medication.name} - ${medication.dosage || \"As directed\"}`, 10, 130 + index * 10);\r\n      });\r\n    }\r\n\r\n    doc.setFontSize(20);\r\n    doc.text(\"Generated by Team MediConnect\", 10, 280);\r\n\r\n    // Save the PDF\r\n    doc.save(\"Prescription.pdf\");\r\n\r\n    // Update the prescription context with the data\r\n    updatePrescription({ symptoms, remedies, medications });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={generatePDF} className=\"generate-pdf-btn\">\r\n        Download Prescription\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Prescription;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,OAAO;AAC7B,SAASC,eAAe,QAAQ,uBAAuB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC5D,MAAM;IAAEC;EAAmB,CAAC,GAAGR,eAAe,CAAC,CAAC,CAAC,CAAE;;EAEnD,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,GAAG,GAAG,IAAIX,KAAK,CAAC,CAAC;IACvBW,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;IACnBD,GAAG,CAACE,IAAI,CAAC,4BAA4B,EAAE,EAAE,EAAE,EAAE,CAAC;IAC9CF,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;IACnBD,GAAG,CAACE,IAAI,CAAC,aAAaR,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAEzCM,GAAG,CAACE,IAAI,CAAC,qBAAqB,EAAE,EAAE,EAAE,EAAE,CAAC;IACvC,IAAIP,QAAQ,CAACQ,MAAM,GAAG,CAAC,EAAE;MACvBR,QAAQ,CAACS,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QAClCN,GAAG,CAACE,IAAI,CAAC,GAAGI,KAAK,GAAG,CAAC,KAAKD,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,GAAGC,KAAK,GAAG,EAAE,CAAC;MAC1D,CAAC,CAAC;IACJ;IAEAN,GAAG,CAACE,IAAI,CAAC,wBAAwB,EAAE,EAAE,EAAE,GAAG,CAAC;IAC3C,IAAIN,WAAW,CAACO,MAAM,GAAG,CAAC,EAAE;MAC1BP,WAAW,CAACQ,OAAO,CAAC,CAACG,UAAU,EAAED,KAAK,KAAK;QACzCN,GAAG,CAACE,IAAI,CAAC,GAAGI,KAAK,GAAG,CAAC,KAAKC,UAAU,CAACC,IAAI,MAAMD,UAAU,CAACE,MAAM,IAAI,aAAa,EAAE,EAAE,EAAE,EAAE,GAAG,GAAGH,KAAK,GAAG,EAAE,CAAC;MAC5G,CAAC,CAAC;IACJ;IAEAN,GAAG,CAACC,WAAW,CAAC,EAAE,CAAC;IACnBD,GAAG,CAACE,IAAI,CAAC,+BAA+B,EAAE,EAAE,EAAE,GAAG,CAAC;;IAElD;IACAF,GAAG,CAACU,IAAI,CAAC,kBAAkB,CAAC;;IAE5B;IACAZ,kBAAkB,CAAC;MAAEJ,QAAQ;MAAEC,QAAQ;MAAEC;IAAY,CAAC,CAAC;EACzD,CAAC;EAED,oBACEJ,OAAA;IAAAmB,QAAA,eACEnB,OAAA;MAAQoB,OAAO,EAAEb,WAAY;MAACc,SAAS,EAAC,kBAAkB;MAAAF,QAAA,EAAC;IAE3D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzCIJ,YAAY;EAAA,QACeH,eAAe;AAAA;AAAA4B,EAAA,GAD1CzB,YAAY;AA2ClB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}