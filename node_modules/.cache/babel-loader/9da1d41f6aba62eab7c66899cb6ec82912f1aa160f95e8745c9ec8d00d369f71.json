{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\test\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState(''); // New state for error message\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n    if (username === 'admin' && password === 'password') {\n      navigate('/chatbot'); // Redirect to Chatbot page on successful login\n    } else {\n      setPasswordError('Invalid credentials. Please try again.');\n    }\n  };\n  const handlePasswordChange = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n\n    // Check for password validity\n    if (newPassword !== 'password') {\n      setPasswordError('Password is incorrect.');\n    } else {\n      setPasswordError('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange // Update password on each change\n        ,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), passwordError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"zrD5gVojWfzRrgZO2ozG8mI21S0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","passwordError","setPasswordError","navigate","handleLogin","e","preventDefault","handlePasswordChange","newPassword","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/test/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordError, setPasswordError] = useState(''); // New state for error message\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    if (username === 'admin' && password === 'password') {\r\n      navigate('/chatbot'); // Redirect to Chatbot page on successful login\r\n    } else {\r\n      setPasswordError('Invalid credentials. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    setPassword(newPassword);\r\n\r\n    // Check for password validity\r\n    if (newPassword !== 'password') {\r\n      setPasswordError('Password is incorrect.');\r\n    } else {\r\n      setPasswordError('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <label>Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handlePasswordChange}  // Update password on each change\r\n          required\r\n        />\r\n        {passwordError && <p className=\"error-message\">{passwordError}</p>} {/* Error message display */}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}