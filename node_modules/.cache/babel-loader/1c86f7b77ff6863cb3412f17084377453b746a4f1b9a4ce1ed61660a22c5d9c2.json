{"ast":null,"code":"var _jsxFileName = \"D:\\\\Movies\\\\Aniket\\\\test2\\\\test\\\\src\\\\components\\\\VideoRecommendations.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchYouTubeRecommendations } from '../youtubeService';\nimport '../styles/VideoRecommendations.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VideoRecommendations({\n  symptom\n}) {\n  _s();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    async function getVideos() {\n      const fetchedVideos = await fetchYouTubeRecommendations(symptom);\n      setVideos(fetchedVideos);\n    }\n    getVideos();\n  }, [symptom]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-recommendations-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"video-recommendations-title\",\n      children: [\"Recommended Videos for \", symptom]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-grid\",\n      children: videos.map(video => {\n        var _video$snippet, _video$snippet2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"100%\",\n              src: `https://www.youtube.com/embed/${video.id.videoId}`,\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: ((_video$snippet = video.snippet) === null || _video$snippet === void 0 ? void 0 : _video$snippet.title) || 'Video Title'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: ((_video$snippet2 = video.snippet) === null || _video$snippet2 === void 0 ? void 0 : _video$snippet2.channelTitle) || 'Channel'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, video.id.videoId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoRecommendations, \"39g9r2hk3cJXA16k+db4Z3Rqykw=\");\n_c = VideoRecommendations;\nexport default VideoRecommendations;\nvar _c;\n$RefreshReg$(_c, \"VideoRecommendations\");","map":{"version":3,"names":["React","useState","useEffect","fetchYouTubeRecommendations","jsxDEV","_jsxDEV","VideoRecommendations","symptom","_s","videos","setVideos","getVideos","fetchedVideos","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","video","_video$snippet","_video$snippet2","width","height","src","id","videoId","frameBorder","allow","allowFullScreen","snippet","title","channelTitle","_c","$RefreshReg$"],"sources":["D:/Movies/Aniket/test2/test/src/components/VideoRecommendations.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchYouTubeRecommendations } from '../youtubeService';\r\nimport '../styles/VideoRecommendations.css';\r\n\r\nfunction VideoRecommendations({ symptom }) {\r\n    const [videos, setVideos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getVideos() {\r\n            const fetchedVideos = await fetchYouTubeRecommendations(symptom);\r\n            setVideos(fetchedVideos); \r\n        }\r\n        getVideos();\r\n    }, [symptom]);\r\n\r\n    return (\r\n        <div className=\"video-recommendations-container\">\r\n            <h3 className=\"video-recommendations-title\">Recommended Videos for {symptom}</h3>\r\n            <div className=\"video-grid\">\r\n                {videos.map(video => (\r\n                    <div key={video.id.videoId} className=\"video-card\">\r\n                        <div className=\"video-wrapper\">\r\n                            <iframe\r\n                                width=\"100%\"\r\n                                height=\"100%\"\r\n                                src={`https://www.youtube.com/embed/${video.id.videoId}`}\r\n                                frameBorder=\"0\"\r\n                                allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\r\n                                allowFullScreen\r\n                            ></iframe>\r\n                        </div>\r\n                        <div className=\"video-info\">\r\n                            <h4>{video.snippet?.title || 'Video Title'}</h4>\r\n                            <p>{video.snippet?.channelTitle || 'Channel'}</p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoRecommendations;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,2BAA2B,QAAQ,mBAAmB;AAC/D,OAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,oBAAoBA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,eAAeS,SAASA,CAAA,EAAG;MACvB,MAAMC,aAAa,GAAG,MAAMT,2BAA2B,CAACI,OAAO,CAAC;MAChEG,SAAS,CAACE,aAAa,CAAC;IAC5B;IACAD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,oBACIF,OAAA;IAAKQ,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC5CT,OAAA;MAAIQ,SAAS,EAAC,6BAA6B;MAAAC,QAAA,GAAC,yBAAuB,EAACP,OAAO;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjFb,OAAA;MAAKQ,SAAS,EAAC,YAAY;MAAAC,QAAA,EACtBL,MAAM,CAACU,GAAG,CAACC,KAAK;QAAA,IAAAC,cAAA,EAAAC,eAAA;QAAA,oBACbjB,OAAA;UAA4BQ,SAAS,EAAC,YAAY;UAAAC,QAAA,gBAC9CT,OAAA;YAAKQ,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC1BT,OAAA;cACIkB,KAAK,EAAC,MAAM;cACZC,MAAM,EAAC,MAAM;cACbC,GAAG,EAAE,iCAAiCL,KAAK,CAACM,EAAE,CAACC,OAAO,EAAG;cACzDC,WAAW,EAAC,GAAG;cACfC,KAAK,EAAC,yEAAyE;cAC/EC,eAAe;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACNb,OAAA;YAAKQ,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBT,OAAA;cAAAS,QAAA,EAAK,EAAAO,cAAA,GAAAD,KAAK,CAACW,OAAO,cAAAV,cAAA,uBAAbA,cAAA,CAAeW,KAAK,KAAI;YAAa;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAChDb,OAAA;cAAAS,QAAA,EAAI,EAAAQ,eAAA,GAAAF,KAAK,CAACW,OAAO,cAAAT,eAAA,uBAAbA,eAAA,CAAeW,YAAY,KAAI;YAAS;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC;QAAA,GAdAE,KAAK,CAACM,EAAE,CAACC,OAAO;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAerB,CAAC;MAAA,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACV,EAAA,CApCQF,oBAAoB;AAAA4B,EAAA,GAApB5B,oBAAoB;AAsC7B,eAAeA,oBAAoB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}