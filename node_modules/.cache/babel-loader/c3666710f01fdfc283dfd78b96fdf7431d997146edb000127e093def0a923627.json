{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\test\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport VideoRecommendations from './components/VideoRecommendations';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst languages = {\n  english: {\n    welcome: \"Hello! I'm MEDICONNECT, your medical assistant. How can I help you today?\",\n    placeholder: \"Type your medical question...\",\n    notFound: \"I'm sorry, I don't have specific information about that. Please consult a healthcare professional for accurate medical advice.\",\n    askMedicine: \"Have you taken any medication for this?\",\n    askWhichMedicine: \"Which medication have you taken?\",\n    askDuration: \"How long have you been experiencing these symptoms?\",\n    suggestConsult: \"If symptoms persist or worsen, please consult a healthcare professional.\",\n    recommendRemedies: \"Here are some remedies you can try:\",\n    recommendMedication: \"If you haven't taken any medication, you can consider these over-the-counter options:\",\n    correctMedication: \"You mentioned taking {0}. This is an appropriate medication for your symptoms.\",\n    incorrectMedication: \"The medication you mentioned ({0}) may not be the most appropriate for your symptoms. Here are some more suitable options:\",\n    clearChat: \"Clear Chat\",\n    disclaimer: \"THIS CHATBOT IS MADE UP BY MEDICONNECT GUYS ...\",\n    greeting: \"Hello! How may I help you?\",\n    thankYou: \"Welcome!!!\"\n  },\n  hindi: {\n    welcome: \"नमस्ते! मैं MEDICONNECT हूं, आपका चिकित्सा सहायक। आज मैं आपकी कैसे मदद कर सकता हूं?\",\n    placeholder: \"अपना चिकित्सा प्रश्न टाइप करें...\",\n    notFound: \"मुझे इस बारे में विशेष जानकारी नहीं है। कृपया सटीक चिकित्सा सलाह के लिए किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\n    askMedicine: \"क्या आपने इसके लिए कोई दवा ली है?\",\n    askWhichMedicine: \"आपने कौन सी दवा ली है?\",\n    askDuration: \"आप कब से इन लक्षणों का अनुभव कर रहे हैं?\",\n    suggestConsult: \"यदि लक्षण बने रहते हैं या बिगड़ जाते हैं, तो कृपया किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\n    recommendRemedies: \"यहां कुछ उपाय हैं जिन्हें आप आजमा सकते हैं:\",\n    recommendMedication: \"यदि आपने कोई दवा नहीं ली है, तो आप इन ओवर-द-काउंटर विकल्पों पर विचार कर सकते हैं:\",\n    correctMedication: \"आपने {0} लेने का उल्लेख किया। यह आपके लक्षणों के लिए एक उपयुक्त दवा है।\",\n    incorrectMedication: \"आपके द्वारा उल्लेखित दवा ({0}) आपके लक्षणों के लिए सबसे उपयुक्त नहीं हो सकती है। यहां कुछ अधिक उपयुक्त विकल्प हैं:\",\n    clearChat: \"चैट साफ़ करें\",\n    disclaimer: \"यह चैटबॉट MEDICONNECT द्वारा बनाया गया है ...\",\n    greeting: \"नमस्ते! मैं आपकी कैसे मदद कर सकता हूं?\",\n    thankYou: \"स्वागत है!!!\"\n  },\n  marathi: {\n    welcome: \"नमस्कार! मी MEDICONNECT आहे, तुमचा वैद्यकीय सहाय्यक. आज मी तुमची कशी मदत करू शकतो?\",\n    placeholder: \"तुमचा वैद्यकीय प्रश्न टाइप करा...\",\n    notFound: \"मला याबद्दल विशिष्ट माहिती नाही. कृपया अचूक वैद्यकीय सल्ल्यासाठी आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\n    askMedicine: \"तुम्ही यासाठी कोणतेही औषध घेतले आहे का?\",\n    askWhichMedicine: \"तुम्ही कोणते औषध घेतले आहे?\",\n    askDuration: \"तुम्हाला किती काळापासून ही लक्षणे जाणवत आहेत?\",\n    suggestConsult: \"जर लक्षणे कायम राहिली किंवा वाढली तर कृपया आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\n    recommendRemedies: \"येथे काही उपाय आहेत जे तुम्ही करून पाहू शकता:\",\n    recommendMedication: \"जर तुम्ही कोणतेही औषध घेतले नसेल, तर तुम्ही या ओव्हर-द-काउंटर पर्यायांचा विचार करू शकता:\",\n    correctMedication: \"तुम्ही {0} घेतल्याचा उल्लेख केला. हे तुमच्या लक्षणांसाठी योग्य औषध आहे.\",\n    incorrectMedication: \"तुम्ही उल्लेख केलेले औषध ({0}) तुमच्या लक्षणांसाठी सर्वात योग्य नसू शकते. येथे काही अधिक योग्य पर्याय आहेत:\",\n    clearChat: \"चॅट साफ करा\",\n    disclaimer: \"हा चॅटबॉट MEDICONNECT द्वारे तयार केला आहे ...\",\n    greeting: \"नमस्कार! मी तुमची कशी मदत करू शकतो?\",\n    thankYou: \"स्वागत आहे!!!\"\n  }\n};\nconst medicalQA = {\n  english: {\n    \"headache\": {\n      remedies: [\"Rest in a quiet, dark room\", \"Apply a cold or warm compress to your head\", \"Stay hydrated\", \"Practice relaxation techniques\"],\n      medications: [\"Acetaminophen (Tylenol)\", \"Ibuprofen (Advil, Motrin)\", \"Aspirin\"]\n    },\n    \"fever\": {\n      remedies: [\"Rest and get plenty of sleep\", \"Stay hydrated (water, clear broths, herbal teas)\", \"Dress in lightweight clothing\", \"Use a fan or air conditioner to keep the room cool\"],\n      medications: [\"Acetaminophen (Tylenol, Paracetamol)\", \"Ibuprofen (Advil, Motrin)\"]\n    },\n    \"cough\": {\n      remedies: [\"Stay hydrated (water, herbal teas, warm soups)\", \"Use a humidifier or take a steamy shower\", \"Try honey (for adults and children over 1 year)\", \"Avoid irritants like smoke or strong odors\"],\n      medications: [\"Dextromethorphan (for dry coughs)\", \"Guaifenesin (for productive coughs)\"]\n    },\n    \"cold\": {\n      remedies: [\"Get plenty of rest\", \"Stay hydrated\", \"Gargle with salt water\", \"Use a saline nasal spray\"],\n      medications: [\"Decongestants\", \"Antihistamines\", \"Pain relievers (Acetaminophen, Ibuprofen)\"]\n    }\n  },\n  hindi: {\n    \"सिरदर्द\": {\n      remedies: [\"शांत, अंधेरे कमरे में आराम करें\", \"अपने सिर पर ठंडा या गर्म कंप्रेस लगाएं\", \"पर्याप्त पानी पीएं\", \"आराम की तकनीकों का अभ्यास करें\"],\n      medications: [\"एसिटामिनोफेन (टायलेनॉल)\", \"आइबुप्रोफेन (एडविल, मोट्रिन)\", \"एस्पिरिन\"]\n    },\n    \"बुखार\": {\n      remedies: [\"आराम करें और पर्याप्त नींद लें\", \"पर्याप्त पानी पीएं (पानी, साफ शोरबा, जड़ी बूटी की चाय)\", \"हल्के कपड़े पहनें\", \"कमरे को ठंडा रखने के लिए पंखे या एयर कंडीशनर का उपयोग करें\"],\n      medications: [\"एसिटामिनोफेन (टायलेनॉल, पैरासिटामोल)\", \"आइबुप्रोफेन (एडविल, मोट्रिन)\"]\n    },\n    \"खांसी\": {\n      remedies: [\"पर्याप्त पानी पीएं (पानी, जड़ी बूटी की चाय, गर्म सूप)\", \"ह्यूमिडिफायर का उपयोग करें या भाप वाला शावर लें\", \"शहद का प्रयोग करें (वयस्कों और 1 वर्ष से अधिक उम्र के बच्चों के लिए)\", \"धुएं या तेज गंध जैसे उत्तेजकों से बचें\"],\n      medications: [\"डेक्स्ट्रोमेथोर्फन (सूखी खांसी के लिए)\", \"ग्वाइफेनेसिन (उत्पादक खांसी के लिए)\"]\n    },\n    \"सर्दी\": {\n      remedies: [\"पर्याप्त आराम करें\", \"पर्याप्त पानी पीएं\", \"नमक के पानी से गरारे करें\", \"सेलाइन नेजल स्प्रे का उपयोग करें\"],\n      medications: [\"डीकंजेस्टेंट्स\", \"एंटीहिस्टामाइन्स\", \"दर्द निवारक (एसिटामिनोफेन, आइबुप्रोफेन)\"]\n    }\n  },\n  marathi: {\n    \"डोकेदुखी\": {\n      remedies: [\"शांत, अंधाऱ्या खोलीत विश्रांती घ्या\", \"डोक्यावर थंड किंवा गरम कंप्रेस लावा\", \"भरपूर पाणी प्या\", \"विश्रांती तंत्रांचा सराव करा\"],\n      medications: [\"अॅसिटामिनोफेन (टायलेनॉल)\", \"आयबुप्रोफेन (अॅडविल, मोट्रिन)\", \"अॅस्पिरिन\"]\n    },\n    \"ताप\": {\n      remedies: [\"विश्रांती घ्या आणि पुरेशी झोप घ्या\", \"भरपूर पाणी प्या (पाणी, स्वच्छ ब्रॉथ, औषधी चहा)\", \"हलके कपडे घाला\", \"खोली थंड ठेवण्यासाठी पंखा किंवा एसी वापरा\"],\n      medications: [\"अॅसिटामिनोफेन (टायलेनॉल, पॅरासिटामोल)\", \"आयबुप्रोफेन (अॅडविल, मोट्रिन)\"]\n    },\n    \"खोकला\": {\n      remedies: [\"भरपूर पाणी प्या (पाणी, औषधी चहा, गरम सूप)\", \"ह्यूमिडिफायर वापरा किंवा वाफारी शॉवर घ्या\", \"मिठाच्या पाण्याने गुळण्या करा\", \"धूर किंवा तीव्र गंधासारख्या उत्तेजकांपासून दूर राहा\"],\n      medications: [\"डेक्स्ट्रोमेथॉर्फन (कोरडे खोकला)\", \"ग्वाइफेनेसिन (उत्पादक खोकला)\"]\n    },\n    \"सर्दी\": {\n      remedies: [\"पुरेशी विश्रांती घ्या\", \"भरपूर पाणी प्या\", \"मीठाच्या पाण्याने गुळण्या करा\", \"सेलाइन नासिक स्प्रे वापरा\"],\n      medications: [\"डीकंजेस्टंट्स\", \"अँटिहिस्टामाइन\", \"दर्दनिवारक (अॅसिटामिनोफेन, आयबुप्रोफेन)\"]\n    }\n  }\n};\nconst MEDICONNECTChatbot = () => {\n  _s();\n  const [language, setLanguage] = useState('english');\n  const [userInput, setUserInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const handleChange = e => {\n    setUserInput(e.target.value);\n  };\n  const getResponse = (symptom, duration, tookMedicine, medicineTaken) => {\n    const {\n      remedies,\n      medications\n    } = medicalQA[language][symptom];\n    let response = `You've been experiencing ${symptom} for ${duration}. ${languages[language].recommendRemedies}\\n\\n`;\n    response += remedies.map((remedy, index) => `${index + 1}. ${remedy}`).join(\"\\n\");\n    if (!tookMedicine) {\n      response += `\\n\\n${languages[language].recommendMedication}\\n\\n`;\n      response += medications.map((medication, index) => `${index + 1}. ${medication}`).join(\"\\n\");\n    } else if (medicineTaken) {\n      const isCorrectMedication = medications.some(med => medicineTaken.toLowerCase().split(/\\s+/).some(word => med.toLowerCase().includes(word)));\n      if (isCorrectMedication) {\n        response += `\\n\\n${languages[language].correctMedication.replace(\"{0}\", medicineTaken)}`;\n      } else {\n        response += `\\n\\n${languages[language].incorrectMedication}\\n\\n`;\n        response += medications.map((medication, index) => `${index + 1}. ${medication}`).join(\"\\n\");\n      }\n    }\n    response += `\\n\\n${languages[language].suggestConsult}`;\n    return response;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    let botResponse;\n    const lowerInput = input.toLowerCase();\n    if (lowerInput === \"hello\" || lowerInput === \"hi\" || lowerInput === \"hie\" || lowerInput === \"नमस्ते\" ||\n    // Hindi\n    lowerInput === \"नमस्कार\" // Marathi\n    ) {\n      botResponse = {\n        text: languages[language].greeting,\n        sender: \"bot\"\n      };\n    } else if (lowerInput === \"thank you\" || lowerInput === \"thanks\" || lowerInput === \"धन्यवाद\" ||\n    // Hindi\n    lowerInput === \"आभार\" // Marathi\n    ) {\n      botResponse = {\n        text: languages[language].thankYou,\n        sender: \"bot\"\n      };\n    } else {\n      switch (conversationStage) {\n        case \"initial\":\n          const symptom = findSymptom(input);\n          if (symptom) {\n            setCurrentSymptom(symptom);\n            botResponse = {\n              text: languages[language].askDuration,\n              sender: \"bot\"\n            };\n            setConversationStage(\"askingDuration\");\n          } else {\n            botResponse = {\n              text: languages[language].notFound,\n              sender: \"bot\"\n            };\n            setConversationStage(\"initial\");\n          }\n          break;\n        case \"askingDuration\":\n          botResponse = {\n            text: languages[language].askMedicine,\n            sender: \"bot\"\n          };\n          setConversationStage(\"askingMedicine\");\n          break;\n        case \"askingMedicine\":\n          const tookMedicine = input.toLowerCase().includes(\"yes\") || input.toLowerCase().includes(\"हां\") ||\n          // Hindi\n          input.toLowerCase().includes(\"होय\"); // Marathi\n          if (tookMedicine) {\n            botResponse = {\n              text: languages[language].askWhichMedicine,\n              sender: \"bot\"\n            };\n            setConversationStage(\"askingWhichMedicine\");\n          } else {\n            botResponse = {\n              text: getResponse(currentSymptom, messages[messages.length - 2].text, false, null),\n              sender: \"bot\"\n            };\n            setConversationStage(\"initial\");\n            setCurrentSymptom(null);\n          }\n          break;\n        case \"askingWhichMedicine\":\n          botResponse = {\n            text: getResponse(currentSymptom, messages[messages.length - 4].text, true, input),\n            sender: \"bot\"\n          };\n          setConversationStage(\"initial\");\n          setCurrentSymptom(null);\n          break;\n        default:\n          botResponse = {\n            text: languages[language].notFound,\n            sender: \"bot\"\n          };\n          setConversationStage(\"initial\");\n      }\n    }\n  };\n  const processUserInput = (input, lang) => {\n    // Simple keyword matching for demonstration\n    const keywords = [\"headache\", \"fever\", \"cough\", \"cold\"];\n    const translatedKeywords = {\n      \"headache\": lang === \"hindi\" ? \"सिरदर्द\" : lang === \"marathi\" ? \"डोकेदुखी\" : \"headache\",\n      \"fever\": lang === \"hindi\" ? \"बुखार\" : lang === \"marathi\" ? \"ताप\" : \"fever\",\n      \"cough\": lang === \"hindi\" ? \"खांसी\" : lang === \"marathi\" ? \"खोकला\" : \"cough\",\n      \"cold\": lang === \"hindi\" ? \"सर्दी\" : lang === \"marathi\" ? \"सर्दी\" : \"cold\"\n    };\n    for (let keyword of keywords) {\n      if (input.toLowerCase().includes(keyword)) {\n        const medicalData = medicalQA[lang][translatedKeywords[keyword]];\n        console.log(medicalData);\n        if (medicalData) {\n          return {\n            text: `${languages[lang].recommendRemedies}\\n - ${medicalData.remedies.join(\"\\n - \")}\\n\\n${languages[lang].recommendMedication}\\n - ${medicalData.medications.join(\"\\n - \")}`,\n            isUser: false\n          };\n        }\n      }\n    }\n    return {\n      text: languages[lang].notFound,\n      isUser: false\n    };\n  };\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n    setMessages([{\n      text: languages[newLanguage].welcome,\n      sender: \"bot\"\n    }]);\n    setCurrentSymptom(null);\n    setConversationStage(\"initial\");\n  };\n  const handleClearChat = () => {\n    setMessages([{\n      text: languages[language].welcome,\n      sender: \"bot\"\n    }]);\n    setCurrentSymptom(null);\n    setConversationStage(\"initial\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"MEDICONNECT Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: language,\n        onChange: handleLanguageChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"english\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hindi\",\n          children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"marathi\",\n          children: \"\\u092E\\u0930\\u093E\\u0920\\u0940\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bot-message\",\n        children: languages[language].welcome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.isUser ? \"user-message\" : \"bot-message\",\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chatbot-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: handleChange,\n        placeholder: languages[language].placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"clear-chat\",\n      onClick: () => setMessages([]),\n      children: languages[language].clearChat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disclaimer\",\n      children: languages[language].disclaimer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n};\n_s(MEDICONNECTChatbot, \"4r3/nIesWXKINT37hY3Q+rwYeFY=\");\n_c = MEDICONNECTChatbot;\nexport default MEDICONNECTChatbot;\nvar _c;\n$RefreshReg$(_c, \"MEDICONNECTChatbot\");","map":{"version":3,"names":["useState","VideoRecommendations","jsxDEV","_jsxDEV","languages","english","welcome","placeholder","notFound","askMedicine","askWhichMedicine","askDuration","suggestConsult","recommendRemedies","recommendMedication","correctMedication","incorrectMedication","clearChat","disclaimer","greeting","thankYou","hindi","marathi","medicalQA","remedies","medications","MEDICONNECTChatbot","_s","language","setLanguage","userInput","setUserInput","messages","setMessages","handleChange","e","target","value","getResponse","symptom","duration","tookMedicine","medicineTaken","response","map","remedy","index","join","medication","isCorrectMedication","some","med","toLowerCase","split","word","includes","replace","handleSubmit","preventDefault","input","trim","userMessage","text","sender","prev","botResponse","lowerInput","conversationStage","findSymptom","setCurrentSymptom","setConversationStage","currentSymptom","length","processUserInput","lang","keywords","translatedKeywords","keyword","medicalData","console","log","isUser","handleLanguageChange","newLanguage","handleClearChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","msg","onSubmit","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/test/src/Chatbot.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport VideoRecommendations from './components/VideoRecommendations';\r\nimport './Chatbot.css';\r\n\r\nconst languages = {\r\n  english: {\r\n    welcome: \"Hello! I'm MEDICONNECT, your medical assistant. How can I help you today?\",\r\n    placeholder: \"Type your medical question...\",\r\n    notFound: \"I'm sorry, I don't have specific information about that. Please consult a healthcare professional for accurate medical advice.\",\r\n    askMedicine: \"Have you taken any medication for this?\",\r\n    askWhichMedicine: \"Which medication have you taken?\",\r\n    askDuration: \"How long have you been experiencing these symptoms?\",\r\n    suggestConsult: \"If symptoms persist or worsen, please consult a healthcare professional.\",\r\n    recommendRemedies: \"Here are some remedies you can try:\",\r\n    recommendMedication: \"If you haven't taken any medication, you can consider these over-the-counter options:\",\r\n    correctMedication: \"You mentioned taking {0}. This is an appropriate medication for your symptoms.\",\r\n    incorrectMedication: \"The medication you mentioned ({0}) may not be the most appropriate for your symptoms. Here are some more suitable options:\",\r\n    clearChat: \"Clear Chat\",\r\n    disclaimer: \"THIS CHATBOT IS MADE UP BY MEDICONNECT GUYS ...\",\r\n    greeting: \"Hello! How may I help you?\",\r\n    thankYou: \"Welcome!!!\"\r\n  },\r\n  hindi: {\r\n    welcome: \"नमस्ते! मैं MEDICONNECT हूं, आपका चिकित्सा सहायक। आज मैं आपकी कैसे मदद कर सकता हूं?\",\r\n    placeholder: \"अपना चिकित्सा प्रश्न टाइप करें...\",\r\n    notFound: \"मुझे इस बारे में विशेष जानकारी नहीं है। कृपया सटीक चिकित्सा सलाह के लिए किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\r\n    askMedicine: \"क्या आपने इसके लिए कोई दवा ली है?\",\r\n    askWhichMedicine: \"आपने कौन सी दवा ली है?\",\r\n    askDuration: \"आप कब से इन लक्षणों का अनुभव कर रहे हैं?\",\r\n    suggestConsult: \"यदि लक्षण बने रहते हैं या बिगड़ जाते हैं, तो कृपया किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\r\n    recommendRemedies: \"यहां कुछ उपाय हैं जिन्हें आप आजमा सकते हैं:\",\r\n    recommendMedication: \"यदि आपने कोई दवा नहीं ली है, तो आप इन ओवर-द-काउंटर विकल्पों पर विचार कर सकते हैं:\",\r\n    correctMedication: \"आपने {0} लेने का उल्लेख किया। यह आपके लक्षणों के लिए एक उपयुक्त दवा है।\",\r\n    incorrectMedication: \"आपके द्वारा उल्लेखित दवा ({0}) आपके लक्षणों के लिए सबसे उपयुक्त नहीं हो सकती है। यहां कुछ अधिक उपयुक्त विकल्प हैं:\",\r\n    clearChat: \"चैट साफ़ करें\",\r\n    disclaimer: \"यह चैटबॉट MEDICONNECT द्वारा बनाया गया है ...\",\r\n    greeting: \"नमस्ते! मैं आपकी कैसे मदद कर सकता हूं?\",\r\n    thankYou: \"स्वागत है!!!\"\r\n  },\r\n  marathi: {\r\n    welcome: \"नमस्कार! मी MEDICONNECT आहे, तुमचा वैद्यकीय सहाय्यक. आज मी तुमची कशी मदत करू शकतो?\",\r\n    placeholder: \"तुमचा वैद्यकीय प्रश्न टाइप करा...\",\r\n    notFound: \"मला याबद्दल विशिष्ट माहिती नाही. कृपया अचूक वैद्यकीय सल्ल्यासाठी आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\r\n    askMedicine: \"तुम्ही यासाठी कोणतेही औषध घेतले आहे का?\",\r\n    askWhichMedicine: \"तुम्ही कोणते औषध घेतले आहे?\",\r\n    askDuration: \"तुम्हाला किती काळापासून ही लक्षणे जाणवत आहेत?\",\r\n    suggestConsult: \"जर लक्षणे कायम राहिली किंवा वाढली तर कृपया आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\r\n    recommendRemedies: \"येथे काही उपाय आहेत जे तुम्ही करून पाहू शकता:\",\r\n    recommendMedication: \"जर तुम्ही कोणतेही औषध घेतले नसेल, तर तुम्ही या ओव्हर-द-काउंटर पर्यायांचा विचार करू शकता:\",\r\n    correctMedication: \"तुम्ही {0} घेतल्याचा उल्लेख केला. हे तुमच्या लक्षणांसाठी योग्य औषध आहे.\",\r\n    incorrectMedication: \"तुम्ही उल्लेख केलेले औषध ({0}) तुमच्या लक्षणांसाठी सर्वात योग्य नसू शकते. येथे काही अधिक योग्य पर्याय आहेत:\",\r\n    clearChat: \"चॅट साफ करा\",\r\n    disclaimer: \"हा चॅटबॉट MEDICONNECT द्वारे तयार केला आहे ...\",\r\n    greeting: \"नमस्कार! मी तुमची कशी मदत करू शकतो?\",\r\n    thankYou: \"स्वागत आहे!!!\"\r\n  }\r\n}\r\n\r\nconst medicalQA = {\r\n  english: {\r\n    \"headache\": {\r\n      remedies: [\r\n        \"Rest in a quiet, dark room\",\r\n        \"Apply a cold or warm compress to your head\",\r\n        \"Stay hydrated\",\r\n        \"Practice relaxation techniques\"\r\n      ],\r\n      medications: [\r\n        \"Acetaminophen (Tylenol)\",\r\n        \"Ibuprofen (Advil, Motrin)\",\r\n        \"Aspirin\"\r\n      ]\r\n    },\r\n    \"fever\": {\r\n      remedies: [\r\n        \"Rest and get plenty of sleep\",\r\n        \"Stay hydrated (water, clear broths, herbal teas)\",\r\n        \"Dress in lightweight clothing\",\r\n        \"Use a fan or air conditioner to keep the room cool\"\r\n      ],\r\n      medications: [\r\n        \"Acetaminophen (Tylenol, Paracetamol)\",\r\n        \"Ibuprofen (Advil, Motrin)\"\r\n      ]\r\n    },\r\n    \"cough\": {\r\n      remedies: [\r\n        \"Stay hydrated (water, herbal teas, warm soups)\",\r\n        \"Use a humidifier or take a steamy shower\",\r\n        \"Try honey (for adults and children over 1 year)\",\r\n        \"Avoid irritants like smoke or strong odors\"\r\n      ],\r\n      medications: [\r\n        \"Dextromethorphan (for dry coughs)\",\r\n        \"Guaifenesin (for productive coughs)\"\r\n      ]\r\n    },\r\n    \"cold\": {\r\n      remedies: [\r\n        \"Get plenty of rest\",\r\n        \"Stay hydrated\",\r\n        \"Gargle with salt water\",\r\n        \"Use a saline nasal spray\"\r\n      ],\r\n      medications: [\r\n        \"Decongestants\",\r\n        \"Antihistamines\",\r\n        \"Pain relievers (Acetaminophen, Ibuprofen)\"\r\n      ]\r\n    }\r\n  },\r\n  hindi: {\r\n    \"सिरदर्द\": {\r\n      remedies: [\r\n        \"शांत, अंधेरे कमरे में आराम करें\",\r\n        \"अपने सिर पर ठंडा या गर्म कंप्रेस लगाएं\",\r\n        \"पर्याप्त पानी पीएं\",\r\n        \"आराम की तकनीकों का अभ्यास करें\"\r\n      ],\r\n      medications: [\r\n        \"एसिटामिनोफेन (टायलेनॉल)\",\r\n        \"आइबुप्रोफेन (एडविल, मोट्रिन)\",\r\n        \"एस्पिरिन\"\r\n      ]\r\n    },\r\n    \"बुखार\": {\r\n      remedies: [\r\n        \"आराम करें और पर्याप्त नींद लें\",\r\n        \"पर्याप्त पानी पीएं (पानी, साफ शोरबा, जड़ी बूटी की चाय)\",\r\n        \"हल्के कपड़े पहनें\",\r\n        \"कमरे को ठंडा रखने के लिए पंखे या एयर कंडीशनर का उपयोग करें\"\r\n      ],\r\n      medications: [\r\n        \"एसिटामिनोफेन (टायलेनॉल, पैरासिटामोल)\",\r\n        \"आइबुप्रोफेन (एडविल, मोट्रिन)\"\r\n      ]\r\n    },\r\n    \"खांसी\": {\r\n      remedies: [\r\n        \"पर्याप्त पानी पीएं (पानी, जड़ी बूटी की चाय, गर्म सूप)\",\r\n        \"ह्यूमिडिफायर का उपयोग करें या भाप वाला शावर लें\",\r\n        \"शहद का प्रयोग करें (वयस्कों और 1 वर्ष से अधिक उम्र के बच्चों के लिए)\",\r\n        \"धुएं या तेज गंध जैसे उत्तेजकों से बचें\"\r\n      ],\r\n      medications: [\r\n        \"डेक्स्ट्रोमेथोर्फन (सूखी खांसी के लिए)\",\r\n        \"ग्वाइफेनेसिन (उत्पादक खांसी के लिए)\"\r\n      ]\r\n    },\r\n    \"सर्दी\": {\r\n      remedies: [\r\n        \"पर्याप्त आराम करें\",\r\n        \"पर्याप्त पानी पीएं\",\r\n        \"नमक के पानी से गरारे करें\",\r\n        \"सेलाइन नेजल स्प्रे का उपयोग करें\"\r\n      ],\r\n      medications: [\r\n        \"डीकंजेस्टेंट्स\",\r\n        \"एंटीहिस्टामाइन्स\",\r\n        \"दर्द निवारक (एसिटामिनोफेन, आइबुप्रोफेन)\"\r\n      ]\r\n    }\r\n  },\r\n  marathi: {\r\n    \"डोकेदुखी\": {\r\n      remedies: [\r\n        \"शांत, अंधाऱ्या खोलीत विश्रांती घ्या\",\r\n        \"डोक्यावर थंड किंवा गरम कंप्रेस लावा\",\r\n        \"भरपूर पाणी प्या\",\r\n        \"विश्रांती तंत्रांचा सराव करा\"\r\n      ],\r\n      medications: [\r\n        \"अॅसिटामिनोफेन (टायलेनॉल)\",\r\n        \"आयबुप्रोफेन (अॅडविल, मोट्रिन)\",\r\n        \"अॅस्पिरिन\"\r\n      ]\r\n    },\r\n    \"ताप\": {\r\n      remedies: [\r\n        \"विश्रांती घ्या आणि पुरेशी झोप घ्या\",\r\n        \"भरपूर पाणी प्या (पाणी, स्वच्छ ब्रॉथ, औषधी चहा)\",\r\n        \"हलके कपडे घाला\",\r\n        \"खोली थंड ठेवण्यासाठी पंखा किंवा एसी वापरा\"\r\n      ],\r\n      medications: [\r\n        \"अॅसिटामिनोफेन (टायलेनॉल, पॅरासिटामोल)\",\r\n        \"आयबुप्रोफेन (अॅडविल, मोट्रिन)\"\r\n      ]\r\n    },\r\n    \"खोकला\": {\r\n      remedies: [\r\n        \"भरपूर पाणी प्या (पाणी, औषधी चहा, गरम सूप)\",\r\n        \"ह्यूमिडिफायर वापरा किंवा वाफारी शॉवर घ्या\",\r\n        \"मिठाच्या पाण्याने गुळण्या करा\",\r\n        \"धूर किंवा तीव्र गंधासारख्या उत्तेजकांपासून दूर राहा\"\r\n      ],\r\n      medications: [\r\n        \"डेक्स्ट्रोमेथॉर्फन (कोरडे खोकला)\",\r\n        \"ग्वाइफेनेसिन (उत्पादक खोकला)\"\r\n      ]\r\n    },\r\n    \"सर्दी\": {\r\n      remedies: [\r\n        \"पुरेशी विश्रांती घ्या\",\r\n        \"भरपूर पाणी प्या\",\r\n        \"मीठाच्या पाण्याने गुळण्या करा\",\r\n        \"सेलाइन नासिक स्प्रे वापरा\"\r\n      ],\r\n      medications: [\r\n        \"डीकंजेस्टंट्स\",\r\n        \"अँटिहिस्टामाइन\",\r\n        \"दर्दनिवारक (अॅसिटामिनोफेन, आयबुप्रोफेन)\"\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\nconst MEDICONNECTChatbot = () => {\r\n  const [language, setLanguage] = useState('english');\r\n  const [userInput, setUserInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  \r\n\r\n  const getResponse = (symptom, duration, tookMedicine, medicineTaken) => {\r\n    const { remedies, medications } = medicalQA[language][symptom]\r\n    let response = `You've been experiencing ${symptom} for ${duration}. ${languages[language].recommendRemedies}\\n\\n`\r\n    response += remedies.map((remedy, index) => `${index + 1}. ${remedy}`).join(\"\\n\")\r\n\r\n    if (!tookMedicine) {\r\n      response += `\\n\\n${languages[language].recommendMedication}\\n\\n`\r\n      response += medications.map((medication, index) => `${index + 1}. ${medication}`).join(\"\\n\")\r\n    } else if (medicineTaken) {\r\n      const isCorrectMedication = medications.some(med => \r\n        medicineTaken.toLowerCase().split(/\\s+/).some(word => \r\n          med.toLowerCase().includes(word)\r\n        )\r\n      )\r\n      if (isCorrectMedication) {\r\n        response += `\\n\\n${languages[language].correctMedication.replace(\"{0}\", medicineTaken)}`\r\n      } else {\r\n        response += `\\n\\n${languages[language].incorrectMedication}\\n\\n`\r\n        response += medications.map((medication, index) => `${index + 1}. ${medication}`).join(\"\\n\")\r\n      }\r\n    }\r\n\r\n    response += `\\n\\n${languages[language].suggestConsult}`\r\n    return response\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (input.trim() === \"\") return\r\n\r\n    const userMessage = { text: input, sender: \"user\" }\r\n    setMessages(prev => [...prev, userMessage])\r\n\r\n    let botResponse\r\n\r\n    const lowerInput = input.toLowerCase()\r\n    if (\r\n      lowerInput === \"hello\" || \r\n      lowerInput === \"hi\" || \r\n      lowerInput === \"hie\" ||\r\n      lowerInput === \"नमस्ते\" || // Hindi\r\n      lowerInput === \"नमस्कार\" // Marathi\r\n    ) {\r\n      botResponse = { text: languages[language].greeting, sender: \"bot\" }\r\n    } else if (\r\n      lowerInput === \"thank you\" || \r\n      lowerInput === \"thanks\" ||\r\n      lowerInput === \"धन्यवाद\" || // Hindi\r\n      lowerInput === \"आभार\" // Marathi\r\n    ) {\r\n      botResponse = { text: languages[language].thankYou, sender: \"bot\" }\r\n    } else {\r\n      switch (conversationStage) {\r\n        case \"initial\":\r\n          const symptom = findSymptom(input)\r\n          if (symptom) {\r\n            setCurrentSymptom(symptom)\r\n            botResponse = { text: languages[language].askDuration, sender: \"bot\" }\r\n            setConversationStage(\"askingDuration\")\r\n          } else {\r\n            botResponse = { text: languages[language].notFound, sender: \"bot\" }\r\n            setConversationStage(\"initial\")\r\n          }\r\n          break\r\n        case \"askingDuration\":\r\n          botResponse = { text: languages[language].askMedicine, sender: \"bot\" }\r\n          setConversationStage(\"askingMedicine\")\r\n          break\r\n        case \"askingMedicine\":\r\n          const tookMedicine = input.toLowerCase().includes(\"yes\") || \r\n                               input.toLowerCase().includes(\"हां\") || // Hindi\r\n                               input.toLowerCase().includes(\"होय\") // Marathi\r\n          if (tookMedicine) {\r\n            botResponse = { text: languages[language].askWhichMedicine, sender: \"bot\" }\r\n            setConversationStage(\"askingWhichMedicine\")\r\n          } else {\r\n            botResponse = { text: getResponse(currentSymptom, messages[messages.length - 2].text, false, null), sender: \"bot\" }\r\n            setConversationStage(\"initial\")\r\n            setCurrentSymptom(null)\r\n          }\r\n          break\r\n        case \"askingWhichMedicine\":\r\n          botResponse = { text: getResponse(currentSymptom, messages[messages.length - 4].text, true, input), sender: \"bot\" }\r\n          setConversationStage(\"initial\")\r\n          setCurrentSymptom(null)\r\n          break\r\n        default:\r\n          botResponse = { text: languages[language].notFound, sender: \"bot\" }\r\n          setConversationStage(\"initial\")\r\n      }\r\n    }\r\n  }\r\n\r\n  const processUserInput = (input, lang) => {\r\n    // Simple keyword matching for demonstration\r\n    const keywords = [\"headache\", \"fever\", \"cough\", \"cold\"];\r\n    const translatedKeywords = {\r\n      \"headache\": lang === \"hindi\" ? \"सिरदर्द\" : lang === \"marathi\" ? \"डोकेदुखी\" : \"headache\",\r\n      \"fever\": lang === \"hindi\" ? \"बुखार\" : lang === \"marathi\" ? \"ताप\" : \"fever\",\r\n      \"cough\": lang === \"hindi\" ? \"खांसी\" : lang === \"marathi\" ? \"खोकला\" : \"cough\",\r\n      \"cold\": lang === \"hindi\" ? \"सर्दी\" : lang === \"marathi\" ? \"सर्दी\" : \"cold\"\r\n    };\r\n\r\n    for (let keyword of keywords) {\r\n      if (input.toLowerCase().includes(keyword)) {\r\n        const medicalData = medicalQA[lang][translatedKeywords[keyword]];\r\n        console.log(medicalData);\r\n        if (medicalData) {\r\n          return {\r\n            text: `${languages[lang].recommendRemedies}\\n - ${medicalData.remedies.join(\"\\n - \")}\\n\\n${languages[lang].recommendMedication}\\n - ${medicalData.medications.join(\"\\n - \")}`,\r\n            isUser: false\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      text: languages[lang].notFound,\r\n      isUser: false\r\n    };\r\n  };\r\n\r\n  const handleLanguageChange = (newLanguage) => {\r\n    setLanguage(newLanguage)\r\n    setMessages([{ text: languages[newLanguage].welcome, sender: \"bot\" }])\r\n    setCurrentSymptom(null)\r\n    setConversationStage(\"initial\")\r\n  }\r\n\r\n  const handleClearChat = () => {\r\n    setMessages([{ text: languages[language].welcome, sender: \"bot\" }])\r\n    setCurrentSymptom(null)\r\n    setConversationStage(\"initial\")\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chatbot-header\">\r\n        <h2>MEDICONNECT Chatbot</h2>\r\n        <select value={language} onChange={handleLanguageChange}>\r\n          <option value=\"english\">English</option>\r\n          <option value=\"hindi\">हिंदी</option>\r\n          <option value=\"marathi\">मराठी</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"chatbot-messages\">\r\n        <div className=\"bot-message\">\r\n          {languages[language].welcome}\r\n        </div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={msg.isUser ? \"user-message\" : \"bot-message\"}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"chatbot-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          onChange={handleChange}\r\n          placeholder={languages[language].placeholder}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n      <button className=\"clear-chat\" onClick={() => setMessages([])}>\r\n        {languages[language].clearChat}\r\n      </button>\r\n      <div className=\"disclaimer\">{languages[language].disclaimer}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MEDICONNECTChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}