{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\test\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport VideoRecommendations from './components/VideoRecommendations';\nimport './Chatbot.css';\nimport { Trash2, Send } from \"lucide-react\";\nimport Prescription from \"./Prescription\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst languages = {\n  english: {\n    welcome: \"Hello! I'm MEDICONNECT, your medical assistant. How can I help you today?\",\n    placeholder: \"Type your medical question...\",\n    notFound: \"I'm sorry, I don't have specific information about that. Please consult a healthcare professional for accurate medical advice.\",\n    askMedicine: \"Have you taken any medication for this?\",\n    askWhichMedicine: \"Which medication have you taken?\",\n    askDuration: \"How long have you been experiencing these symptoms?\",\n    suggestConsult: \"If symptoms persist or worsen, please consult a healthcare professional.\",\n    recommendRemedies: \"Here are some remedies you can try:\",\n    recommendMedication: \"If you haven't taken any medication, you can consider these over-the-counter options:\",\n    correctMedication: \"You mentioned taking {0}. This is an appropriate medication for your symptoms.\",\n    incorrectMedication: \"The medication you mentioned ({0}) may not be the most appropriate for your symptoms. Here are some more suitable options:\",\n    clearChat: \"Clear Chat\",\n    disclaimer: \"THIS CHATBOT IS MADE UP BY MEDICONNECT GUYS ...\",\n    greeting: \"Hello! How may I help you?\",\n    thankYou: \"Welcome!!!\"\n  },\n  hindi: {\n    welcome: \"नमस्ते! मैं MEDICONNECT हूं, आपका चिकित्सा सहायक। आज मैं आपकी कैसे मदद कर सकता हूं?\",\n    placeholder: \"अपना चिकित्सा प्रश्न टाइप करें...\",\n    notFound: \"मुझे इस बारे में विशेष जानकारी नहीं है। कृपया सटीक चिकित्सा सलाह के लिए किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\n    askMedicine: \"क्या आपने इसके लिए कोई दवा ली है?\",\n    askWhichMedicine: \"आपने कौन सी दवा ली है?\",\n    askDuration: \"आप कब से इन लक्षणों का अनुभव कर रहे हैं?\",\n    suggestConsult: \"यदि लक्षण बने रहते हैं या बिगड़ जाते हैं, तो कृपया किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\n    recommendRemedies: \"यहां कुछ उपाय हैं जिन्हें आप आजमा सकते हैं:\",\n    recommendMedication: \"यदि आपने कोई दवा नहीं ली है, तो आप इन ओवर-द-काउंटर विकल्पों पर विचार कर सकते हैं:\",\n    correctMedication: \"आपने {0} लेने का उल्लेख किया। यह आपके लक्षणों के लिए एक उपयुक्त दवा है।\",\n    incorrectMedication: \"आपके द्वारा उल्लेखित दवा ({0}) आपके लक्षणों के लिए सबसे उपयुक्त नहीं हो सकती है। यहां कुछ अधिक उपयुक्त विकल्प हैं:\",\n    clearChat: \"चैट साफ़ करें\",\n    disclaimer: \"यह चैटबॉट MEDICONNECT द्वारा बनाया गया है ...\",\n    greeting: \"नमस्ते! मैं आपकी कैसे मदद कर सकता हूं?\",\n    thankYou: \"स्वागत है!!!\"\n  },\n  marathi: {\n    welcome: \"नमस्कार! मी MEDICONNECT आहे, तुमचा वैद्यकीय सहाय्यक. आज मी तुमची कशी मदत करू शकतो?\",\n    placeholder: \"तुमचा वैद्यकीय प्रश्न टाइप करा...\",\n    notFound: \"मला याबद्दल विशिष्ट माहिती नाही. कृपया अचूक वैद्यकीय सल्ल्यासाठी आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\n    askMedicine: \"तुम्ही यासाठी कोणतेही औषध घेतले आहे का?\",\n    askWhichMedicine: \"तुम्ही कोणते औषध घेतले आहे?\",\n    askDuration: \"तुम्हाला किती काळापासून ही लक्षणे जाणवत आहेत?\",\n    suggestConsult: \"जर लक्षणे कायम राहिली किंवा वाढली तर कृपया आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\n    recommendRemedies: \"येथे काही उपाय आहेत जे तुम्ही करून पाहू शकता:\",\n    recommendMedication: \"जर तुम्ही कोणतेही औषध घेतले नसेल, तर तुम्ही या ओव्हर-द-काउंटर पर्यायांचा विचार करू शकता:\",\n    correctMedication: \"तुम्ही {0} घेतल्याचा उल्लेख केला. हे तुमच्या लक्षणांसाठी योग्य औषध आहे.\",\n    incorrectMedication: \"तुम्ही उल्लेख केलेले औषध ({0}) तुमच्या लक्षणांसाठी सर्वात योग्य नसू शकते. येथे काही अधिक योग्य पर्याय आहेत:\",\n    clearChat: \"चॅट साफ करा\",\n    disclaimer: \"हा चॅटबॉट MEDICONNECT द्वारे तयार केला आहे ...\",\n    greeting: \"नमस्कार! मी तुमची कशी मदत करू शकतो?\",\n    thankYou: \"स्वागत आहे!!!\"\n  }\n};\nconst medicalQA = {\n  english: {\n    \"headache\": {\n      remedies: [\"Rest in a quiet, dark room\", \"Apply a cold or warm compress to your head\", \"Stay hydrated\", \"Practice relaxation techniques\"],\n      medications: [\"Acetaminophen (Tylenol)\", \"Ibuprofen (Advil, Motrin)\", \"Aspirin\"]\n    },\n    \"fever\": {\n      remedies: [\"Rest and get plenty of sleep\", \"Stay hydrated (water, clear broths, herbal teas)\", \"Dress in lightweight clothing\", \"Use a fan or air conditioner to keep the room cool\"],\n      medications: [{\n        name: \"Acetaminophen (Tylenol, Paracetamol)\",\n        dosage: \" 1 Tab in Day , 1 Tab in Night \"\n      }, {\n        name: \"Ibuprofen (Advil, Motrin)\",\n        dosage: \" 1 Tab in Day , 1 Tab in Night\"\n      }]\n    },\n    \"cough\": {\n      remedies: [\"Stay hydrated (water, herbal teas, warm soups)\", \"Use a humidifier or take a steamy shower\", \"Try honey (for adults and children over 1 year)\", \"Avoid irritants like smoke or strong odors\"],\n      medications: [{\n        name: \"Dextromethorphan (for dry coughs)\"\n      }, {\n        name: \"Guaifenesin (for productive coughs)\"\n      }]\n    },\n    \"cold\": {\n      remedies: [\"Get plenty of rest\", \"Stay hydrated\", \"Gargle with salt water\", \"Use a saline nasal spray\"],\n      medications: [{\n        name: \"Decongestants\"\n      }, {\n        name: \"Antihistamines\"\n      }, {\n        name: \"Pain relievers (Acetaminophen, Ibuprofen)\"\n      }]\n    }\n  },\n  hindi: {\n    \"सिरदर्द\": {\n      remedies: [\"शांत, अंधेरे कमरे में आराम करें\", \"अपने सिर पर ठंडा या गर्म कंप्रेस लगाएं\", \"पर्याप्त पानी पीएं\", \"आराम की तकनीकों का अभ्यास करें\"],\n      medications: [\"एसिटामिनोफेन (टायलेनॉल)\", \"आइबुप्रोफेन (एडविल, मोट्रिन)\", \"एस्पिरिन\"]\n    },\n    \"बुखार\": {\n      remedies: [\"आराम करें और पर्याप्त नींद लें\", \"पर्याप्त पानी पीएं (पानी, साफ शोरबा, जड़ी बूटी की चाय)\", \"हल्के कपड़े पहनें\", \"कमरे को ठंडा रखने के लिए पंखे या एयर कंडीशनर का उपयोग करें\"],\n      medications: [\"एसिटामिनोफेन (टायलेनॉल, पैरासिटामोल)\", \"आइबुप्रोफेन (एडविल, मोट्रिन)\"]\n    },\n    \"खांसी\": {\n      remedies: [\"पर्याप्त पानी पीएं (पानी, जड़ी बूटी की चाय, गर्म सूप)\", \"ह्यूमिडिफायर का उपयोग करें या भाप वाला शावर लें\", \"शहद का प्रयोग करें (वयस्कों और 1 वर्ष से अधिक उम्र के बच्चों के लिए)\", \"धुएं या तेज गंध जैसे उत्तेजकों से बचें\"],\n      medications: [\"डेक्स्ट्रोमेथोर्फन (सूखी खांसी के लिए)\", \"ग्वाइफेनेसिन (उत्पादक खांसी के लिए)\"]\n    },\n    \"सर्दी\": {\n      remedies: [\"पर्याप्त आराम करें\", \"पर्याप्त पानी पीएं\", \"नमक के पानी से गरारे करें\", \"सेलाइन नेजल स्प्रे का उपयोग करें\"],\n      medications: [\"डीकंजेस्टेंट्स\", \"एंटीहिस्टामाइन्स\", \"दर्द निवारक (एसिटामिनोफेन, आइबुप्रोफेन)\"]\n    }\n  },\n  marathi: {\n    \"डोकेदुखी\": {\n      remedies: [\"शांत, अंधाऱ्या खोलीत विश्रांती घ्या\", \"डोक्यावर थंड किंवा गरम कंप्रेस लावा\", \"भरपूर पाणी प्या\", \"विश्रांती तंत्रांचा सराव करा\"],\n      medications: [\"अॅसिटामिनोफेन (टायलेनॉल)\", \"आयबुप्रोफेन (अॅडविल, मोट्रिन)\", \"अॅस्पिरिन\"]\n    },\n    \"ताप\": {\n      remedies: [\"विश्रांती घ्या आणि पुरेशी झोप घ्या\", \"भरपूर पाणी प्या (पाणी, स्वच्छ ब्रॉथ, औषधी चहा)\", \"हलके कपडे घाला\", \"खोली थंड ठेवण्यासाठी पंखा किंवा एसी वापरा\"],\n      medications: [\"अॅसिटामिनोफेन (टायलेनॉल, पॅरासिटामोल)\", \"आयबुप्रोफेन (अॅडविल, मोट्रिन)\"]\n    },\n    \"खोकला\": {\n      remedies: [\"भरपूर पाणी प्या (पाणी, औषधी चहा, गरम सूप)\", \"ह्यूमिडिफायर वापरा किंवा वाफारी शॉवर घ्या\", \"मिठाच्या पाण्याने गुळण्या करा\", \"धूर किंवा तीव्र गंधासारख्या उत्तेजकांपासून दूर राहा\"],\n      medications: [\"डेक्स्ट्रोमेथॉर्फन (कोरडे खोकला)\", \"ग्वाइफेनेसिन (उत्पादक खोकला)\"]\n    },\n    \"सर्दी\": {\n      remedies: [\"पुरेशी विश्रांती घ्या\", \"भरपूर पाणी प्या\", \"मीठाच्या पाण्याने गुळण्या करा\", \"सेलाइन नासिक स्प्रे वापरा\"],\n      medications: [\"डीकंजेस्टंट्स\", \"अँटिहिस्टामाइन\", \"दर्दनिवारक (अॅसिटामिनोफेन, आयबुप्रोफेन)\"]\n    }\n  }\n};\nconst MEDICONNECTChatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [language, setLanguage] = useState(\"english\");\n  const [currentSymptom, setCurrentSymptom] = useState(null);\n  const [conversationStage, setConversationStage] = useState(\"initial\");\n  const [prescription, setPrescription] = useState([]);\n  const [prescriptionEnable, setPrescriptionEnable] = useState(false);\n  const findSymptom = question => {\n    const lowerQuestion = question.toLowerCase();\n    const qaSet = medicalQA[language];\n    for (const key of Object.keys(qaSet)) {\n      if (lowerQuestion.includes(key.toLowerCase())) {\n        return key;\n      }\n    }\n    return null;\n  };\n  const getResponse = (symptom, duration, tookMedicine, medicineTaken) => {\n    setPrescription();\n    const {\n      remedies,\n      medications\n    } = medicalQA[language][symptom];\n    let response = `You've been experiencing ${symptom} for ${duration}. ${languages[language].recommendRemedies}\\n\\n`;\n    response += remedies.map((remedy, index) => `${index + 1}. ${remedy}`).join(\"\\n\");\n    if (!tookMedicine) {\n      response += `\\n\\n${languages[language].recommendMedication}\\n\\n`;\n      response += medications.map((medication, index) => {\n        const {\n          name,\n          dosage\n        } = medication; // Assuming each medication has a `name` and `dosage` field\n        return `${index + 1}. ${name} - Dosage: ${dosage}`;\n      }).join(\"\\n\");\n      response += `\\n\\n${languages[language].askDosage}`;\n    } else if (medicineTaken) {\n      const isCorrectMedication = medications.some(med => medicineTaken.toLowerCase().includes(med.name.toLowerCase()));\n      if (isCorrectMedication) {\n        const correctMed = medications.find(med => medicineTaken.toLowerCase().includes(med.name.toLowerCase()));\n        response += languages[language].correctMedication.replace(\"{0}\", medicineTaken);\n        response += ` Dosage: ${correctMed.dosage}`; // Adding correct dosage information\n      } else {\n        response += languages[language].incorrectMedication.replace(\"{0}\", medicineTaken);\n        response += `\\n\\n${languages[language].recommendMedication}\\n\\n`;\n        response += medications.map((medication, index) => {\n          const {\n            name,\n            dosage\n          } = medication;\n          return `${index + 1}. ${name} - Dosage: ${dosage}`;\n        }).join(\"\\n\");\n      }\n    }\n    return response;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    let botResponse;\n    const lowerInput = input.toLowerCase();\n    if (lowerInput === \"hello\" || lowerInput === \"hi\" || lowerInput === \"hie\" || lowerInput === \"नमस्ते\" ||\n    // Hindi\n    lowerInput === \"नमस्कार\" // Marathi\n    ) {\n      botResponse = {\n        text: languages[language].greeting,\n        sender: \"bot\"\n      };\n    } else if (lowerInput === \"thank you\" || lowerInput === \"thanks\" || lowerInput === \"धन्यवाद\" ||\n    // Hindi\n    lowerInput === \"आभार\" // Marathi\n    ) {\n      botResponse = {\n        text: languages[language].thankYou,\n        sender: \"bot\"\n      };\n    } else {\n      switch (conversationStage) {\n        case \"initial\":\n          const symptom = findSymptom(input);\n          if (symptom) {\n            setCurrentSymptom(symptom);\n            botResponse = {\n              text: languages[language].askDuration,\n              sender: \"bot\"\n            };\n            setConversationStage(\"askingDuration\");\n          } else {\n            botResponse = {\n              text: languages[language].notFound,\n              sender: \"bot\"\n            };\n            setConversationStage(\"initial\");\n          }\n          break;\n        case \"askingDuration\":\n          botResponse = {\n            text: languages[language].askMedicine,\n            sender: \"bot\"\n          };\n          setConversationStage(\"askingMedicine\");\n          break;\n        case \"askingMedicine\":\n          const tookMedicine = input.toLowerCase().includes(\"yes\") || input.toLowerCase().includes(\"हां\") ||\n          // Hindi\n          input.toLowerCase().includes(\"होय\"); // Marathi\n          if (tookMedicine) {\n            botResponse = {\n              text: languages[language].askWhichMedicine,\n              sender: \"bot\"\n            };\n            setConversationStage(\"askingWhichMedicine\");\n          } else {\n            botResponse = {\n              text: getResponse(currentSymptom, messages[messages.length - 2].text, false, null),\n              sender: \"bot\"\n            };\n            setConversationStage(\"initial\");\n            setCurrentSymptom(null);\n          }\n          break;\n        case \"askingWhichMedicine\":\n          botResponse = {\n            text: getResponse(currentSymptom, messages[messages.length - 4].text, true, input),\n            sender: \"bot\"\n          };\n          setConversationStage(\"initial\");\n          setCurrentSymptom(null);\n          break;\n        default:\n          botResponse = {\n            text: languages[language].notFound,\n            sender: \"bot\"\n          };\n          setConversationStage(\"initial\");\n      }\n    }\n    setMessages(prev => [...prev, botResponse]);\n    setInput(\"\");\n  };\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n    setMessages([{\n      text: languages[newLanguage].welcome,\n      sender: \"bot\"\n    }]);\n    setCurrentSymptom(null);\n    setConversationStage(\"initial\");\n  };\n  const handleClearChat = () => {\n    setMessages([{\n      text: languages[language].welcome,\n      sender: \"bot\"\n    }]);\n    setCurrentSymptom(null);\n    setConversationStage(\"initial\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"MEDICONNECT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => handleLanguageChange(e.target.value),\n            defaultValue: language,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"english\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hindi\",\n              children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"marathi\",\n              children: \"\\u092E\\u0930\\u093E\\u0920\\u0940\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClearChat,\n            className: \"clear-button\",\n            \"aria-label\": languages[language].clearChat,\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 7\n      }, this), prescriptionEnable && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Prescription, {\n          symptoms: [],\n          remedies: [],\n          medications: []\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === \"user\" ? \"user\" : \"admin\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `message-bubble ${message.sender === \"user\" ? \"user-bubble\" : \"admin-bubble\"}`,\n            children: message.text.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-line\",\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"input-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: languages[language].placeholder,\n            value: input,\n            onChange: e => setInput(e.target.value),\n            \"aria-label\": languages[language].placeholder,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            \"aria-label\": \"Send message\",\n            children: [/*#__PURE__*/_jsxDEV(Send, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disclaimer\",\n        children: languages[language].disclaimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentSymptom && /*#__PURE__*/_jsxDEV(VideoRecommendations, {\n        symptom: currentSymptom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(MEDICONNECTChatbot, \"YvYofMaaRVJoD+AduObOiy2rfwE=\");\n_c = MEDICONNECTChatbot;\nexport default MEDICONNECTChatbot;\nvar _c;\n$RefreshReg$(_c, \"MEDICONNECTChatbot\");","map":{"version":3,"names":["useState","VideoRecommendations","Trash2","Send","Prescription","jsxDEV","_jsxDEV","Fragment","_Fragment","languages","english","welcome","placeholder","notFound","askMedicine","askWhichMedicine","askDuration","suggestConsult","recommendRemedies","recommendMedication","correctMedication","incorrectMedication","clearChat","disclaimer","greeting","thankYou","hindi","marathi","medicalQA","remedies","medications","name","dosage","MEDICONNECTChatbot","_s","messages","setMessages","input","setInput","language","setLanguage","currentSymptom","setCurrentSymptom","conversationStage","setConversationStage","prescription","setPrescription","prescriptionEnable","setPrescriptionEnable","findSymptom","question","lowerQuestion","toLowerCase","qaSet","key","Object","keys","includes","getResponse","symptom","duration","tookMedicine","medicineTaken","response","map","remedy","index","join","medication","askDosage","isCorrectMedication","some","med","correctMed","find","replace","handleSubmit","e","preventDefault","trim","userMessage","text","sender","prev","botResponse","lowerInput","length","handleLanguageChange","newLanguage","handleClearChat","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","defaultValue","onClick","symptoms","message","split","line","i","onSubmit","type","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/test/src/Chatbot.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport VideoRecommendations from './components/VideoRecommendations';\r\nimport './Chatbot.css';\r\nimport { Trash2, Send } from \"lucide-react\";\r\nimport Prescription from \"./Prescription\";\r\n\r\nconst languages = {\r\n  english: {\r\n    welcome: \"Hello! I'm MEDICONNECT, your medical assistant. How can I help you today?\",\r\n    placeholder: \"Type your medical question...\",\r\n    notFound: \"I'm sorry, I don't have specific information about that. Please consult a healthcare professional for accurate medical advice.\",\r\n    askMedicine: \"Have you taken any medication for this?\",\r\n    askWhichMedicine: \"Which medication have you taken?\",\r\n    askDuration: \"How long have you been experiencing these symptoms?\",\r\n    suggestConsult: \"If symptoms persist or worsen, please consult a healthcare professional.\",\r\n    recommendRemedies: \"Here are some remedies you can try:\",\r\n    recommendMedication: \"If you haven't taken any medication, you can consider these over-the-counter options:\",\r\n    correctMedication: \"You mentioned taking {0}. This is an appropriate medication for your symptoms.\",\r\n    incorrectMedication: \"The medication you mentioned ({0}) may not be the most appropriate for your symptoms. Here are some more suitable options:\", \r\n    clearChat: \"Clear Chat\",\r\n    disclaimer: \"THIS CHATBOT IS MADE UP BY MEDICONNECT GUYS ...\",\r\n    greeting: \"Hello! How may I help you?\",\r\n    thankYou: \"Welcome!!!\"\r\n  },\r\n  hindi: {\r\n    welcome: \"नमस्ते! मैं MEDICONNECT हूं, आपका चिकित्सा सहायक। आज मैं आपकी कैसे मदद कर सकता हूं?\",\r\n    placeholder: \"अपना चिकित्सा प्रश्न टाइप करें...\",\r\n    notFound: \"मुझे इस बारे में विशेष जानकारी नहीं है। कृपया सटीक चिकित्सा सलाह के लिए किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\r\n    askMedicine: \"क्या आपने इसके लिए कोई दवा ली है?\",\r\n    askWhichMedicine: \"आपने कौन सी दवा ली है?\",\r\n    askDuration: \"आप कब से इन लक्षणों का अनुभव कर रहे हैं?\",\r\n    suggestConsult: \"यदि लक्षण बने रहते हैं या बिगड़ जाते हैं, तो कृपया किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\r\n    recommendRemedies: \"यहां कुछ उपाय हैं जिन्हें आप आजमा सकते हैं:\",\r\n    recommendMedication: \"यदि आपने कोई दवा नहीं ली है, तो आप इन ओवर-द-काउंटर विकल्पों पर विचार कर सकते हैं:\",\r\n    correctMedication: \"आपने {0} लेने का उल्लेख किया। यह आपके लक्षणों के लिए एक उपयुक्त दवा है।\",\r\n    incorrectMedication: \"आपके द्वारा उल्लेखित दवा ({0}) आपके लक्षणों के लिए सबसे उपयुक्त नहीं हो सकती है। यहां कुछ अधिक उपयुक्त विकल्प हैं:\",\r\n    clearChat: \"चैट साफ़ करें\",\r\n    disclaimer: \"यह चैटबॉट MEDICONNECT द्वारा बनाया गया है ...\",\r\n    greeting: \"नमस्ते! मैं आपकी कैसे मदद कर सकता हूं?\",\r\n    thankYou: \"स्वागत है!!!\"\r\n  },\r\n  marathi: {\r\n    welcome: \"नमस्कार! मी MEDICONNECT आहे, तुमचा वैद्यकीय सहाय्यक. आज मी तुमची कशी मदत करू शकतो?\",\r\n    placeholder: \"तुमचा वैद्यकीय प्रश्न टाइप करा...\",\r\n    notFound: \"मला याबद्दल विशिष्ट माहिती नाही. कृपया अचूक वैद्यकीय सल्ल्यासाठी आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\r\n    askMedicine: \"तुम्ही यासाठी कोणतेही औषध घेतले आहे का?\",\r\n    askWhichMedicine: \"तुम्ही कोणते औषध घेतले आहे?\",\r\n    askDuration: \"तुम्हाला किती काळापासून ही लक्षणे जाणवत आहेत?\",\r\n    suggestConsult: \"जर लक्षणे कायम राहिली किंवा वाढली तर कृपया आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\r\n    recommendRemedies: \"येथे काही उपाय आहेत जे तुम्ही करून पाहू शकता:\",\r\n    recommendMedication: \"जर तुम्ही कोणतेही औषध घेतले नसेल, तर तुम्ही या ओव्हर-द-काउंटर पर्यायांचा विचार करू शकता:\",\r\n    correctMedication: \"तुम्ही {0} घेतल्याचा उल्लेख केला. हे तुमच्या लक्षणांसाठी योग्य औषध आहे.\",\r\n    incorrectMedication: \"तुम्ही उल्लेख केलेले औषध ({0}) तुमच्या लक्षणांसाठी सर्वात योग्य नसू शकते. येथे काही अधिक योग्य पर्याय आहेत:\",\r\n    clearChat: \"चॅट साफ करा\",\r\n    disclaimer: \"हा चॅटबॉट MEDICONNECT द्वारे तयार केला आहे ...\",\r\n    greeting: \"नमस्कार! मी तुमची कशी मदत करू शकतो?\",\r\n    thankYou: \"स्वागत आहे!!!\"\r\n  }\r\n}\r\n\r\nconst medicalQA = {\r\n  english: {\r\n    \"headache\": {\r\n      remedies: [\r\n        \"Rest in a quiet, dark room\",\r\n        \"Apply a cold or warm compress to your head\",\r\n        \"Stay hydrated\",\r\n        \"Practice relaxation techniques\"\r\n      ],\r\n      medications: [\r\n        \"Acetaminophen (Tylenol)\",\r\n        \"Ibuprofen (Advil, Motrin)\",\r\n        \"Aspirin\"\r\n      ]\r\n    },\r\n    \"fever\": {\r\n      remedies: [\r\n        \"Rest and get plenty of sleep\",\r\n        \"Stay hydrated (water, clear broths, herbal teas)\",\r\n        \"Dress in lightweight clothing\",\r\n        \"Use a fan or air conditioner to keep the room cool\"\r\n      ],\r\n      medications: [\r\n        {name: \"Acetaminophen (Tylenol, Paracetamol)\", dosage : \" 1 Tab in Day , 1 Tab in Night \"},\r\n        {name : \"Ibuprofen (Advil, Motrin)\", dosage : \" 1 Tab in Day , 1 Tab in Night\"}\r\n      ]\r\n    },\r\n    \"cough\": {\r\n      remedies: [\r\n        \"Stay hydrated (water, herbal teas, warm soups)\",\r\n        \"Use a humidifier or take a steamy shower\",\r\n        \"Try honey (for adults and children over 1 year)\",\r\n        \"Avoid irritants like smoke or strong odors\"\r\n      ],\r\n      medications: [\r\n       { name: \"Dextromethorphan (for dry coughs)\"},\r\n        { name:\"Guaifenesin (for productive coughs)\"}\r\n      ]\r\n    },\r\n    \"cold\": {\r\n      remedies: [\r\n        \"Get plenty of rest\",\r\n        \"Stay hydrated\",\r\n        \"Gargle with salt water\",\r\n        \"Use a saline nasal spray\"\r\n      ],\r\n      medications: [\r\n        { name: \"Decongestants\"},\r\n        {name:\"Antihistamines\"},\r\n        {name: \"Pain relievers (Acetaminophen, Ibuprofen)\"}\r\n      ]\r\n    }\r\n  },\r\n  hindi: {\r\n    \"सिरदर्द\": {\r\n      remedies: [\r\n        \"शांत, अंधेरे कमरे में आराम करें\",\r\n        \"अपने सिर पर ठंडा या गर्म कंप्रेस लगाएं\",\r\n        \"पर्याप्त पानी पीएं\",\r\n        \"आराम की तकनीकों का अभ्यास करें\"\r\n      ],\r\n      medications: [\r\n        \"एसिटामिनोफेन (टायलेनॉल)\",\r\n        \"आइबुप्रोफेन (एडविल, मोट्रिन)\",\r\n        \"एस्पिरिन\"\r\n      ]\r\n    },\r\n    \"बुखार\": {\r\n      remedies: [\r\n        \"आराम करें और पर्याप्त नींद लें\",\r\n        \"पर्याप्त पानी पीएं (पानी, साफ शोरबा, जड़ी बूटी की चाय)\",\r\n        \"हल्के कपड़े पहनें\",\r\n        \"कमरे को ठंडा रखने के लिए पंखे या एयर कंडीशनर का उपयोग करें\"\r\n      ],\r\n      medications: [\r\n        \"एसिटामिनोफेन (टायलेनॉल, पैरासिटामोल)\",\r\n        \"आइबुप्रोफेन (एडविल, मोट्रिन)\"\r\n      ]\r\n    },\r\n    \"खांसी\": {\r\n      remedies: [\r\n        \"पर्याप्त पानी पीएं (पानी, जड़ी बूटी की चाय, गर्म सूप)\",\r\n        \"ह्यूमिडिफायर का उपयोग करें या भाप वाला शावर लें\",\r\n        \"शहद का प्रयोग करें (वयस्कों और 1 वर्ष से अधिक उम्र के बच्चों के लिए)\",\r\n        \"धुएं या तेज गंध जैसे उत्तेजकों से बचें\"\r\n      ],\r\n      medications: [\r\n        \"डेक्स्ट्रोमेथोर्फन (सूखी खांसी के लिए)\",\r\n        \"ग्वाइफेनेसिन (उत्पादक खांसी के लिए)\"\r\n      ]\r\n    },\r\n    \"सर्दी\": {\r\n      remedies: [\r\n        \"पर्याप्त आराम करें\",\r\n        \"पर्याप्त पानी पीएं\",\r\n        \"नमक के पानी से गरारे करें\",\r\n        \"सेलाइन नेजल स्प्रे का उपयोग करें\"\r\n      ],\r\n      medications: [\r\n        \"डीकंजेस्टेंट्स\",\r\n        \"एंटीहिस्टामाइन्स\",\r\n        \"दर्द निवारक (एसिटामिनोफेन, आइबुप्रोफेन)\"\r\n      ]\r\n    }\r\n  },\r\n  marathi: {\r\n    \"डोकेदुखी\": {\r\n      remedies: [\r\n        \"शांत, अंधाऱ्या खोलीत विश्रांती घ्या\",\r\n        \"डोक्यावर थंड किंवा गरम कंप्रेस लावा\",\r\n        \"भरपूर पाणी प्या\",\r\n        \"विश्रांती तंत्रांचा सराव करा\"\r\n      ],\r\n      medications: [\r\n        \"अॅसिटामिनोफेन (टायलेनॉल)\",\r\n        \"आयबुप्रोफेन (अॅडविल, मोट्रिन)\",\r\n        \"अॅस्पिरिन\"\r\n      ]\r\n    },\r\n    \"ताप\": {\r\n      remedies: [\r\n        \"विश्रांती घ्या आणि पुरेशी झोप घ्या\",\r\n        \"भरपूर पाणी प्या (पाणी, स्वच्छ ब्रॉथ, औषधी चहा)\",\r\n        \"हलके कपडे घाला\",\r\n        \"खोली थंड ठेवण्यासाठी पंखा किंवा एसी वापरा\"\r\n      ],\r\n      medications: [\r\n        \"अॅसिटामिनोफेन (टायलेनॉल, पॅरासिटामोल)\",\r\n        \"आयबुप्रोफेन (अॅडविल, मोट्रिन)\"\r\n      ]\r\n    },\r\n    \"खोकला\": {\r\n      remedies: [\r\n        \"भरपूर पाणी प्या (पाणी, औषधी चहा, गरम सूप)\",\r\n        \"ह्यूमिडिफायर वापरा किंवा वाफारी शॉवर घ्या\",\r\n        \"मिठाच्या पाण्याने गुळण्या करा\",\r\n        \"धूर किंवा तीव्र गंधासारख्या उत्तेजकांपासून दूर राहा\"\r\n      ],\r\n      medications: [\r\n        \"डेक्स्ट्रोमेथॉर्फन (कोरडे खोकला)\",\r\n        \"ग्वाइफेनेसिन (उत्पादक खोकला)\"\r\n      ]\r\n    },\r\n    \"सर्दी\": {\r\n      remedies: [\r\n        \"पुरेशी विश्रांती घ्या\",\r\n        \"भरपूर पाणी प्या\",\r\n        \"मीठाच्या पाण्याने गुळण्या करा\",\r\n        \"सेलाइन नासिक स्प्रे वापरा\"\r\n      ],\r\n      medications: [\r\n        \"डीकंजेस्टंट्स\",\r\n        \"अँटिहिस्टामाइन\",\r\n        \"दर्दनिवारक (अॅसिटामिनोफेन, आयबुप्रोफेन)\"\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst MEDICONNECTChatbot = () => {\r\n  const [messages, setMessages] = useState([])\r\n  const [input, setInput] = useState(\"\")\r\n  const [language, setLanguage] = useState(\"english\")\r\n  const [currentSymptom, setCurrentSymptom] = useState(null)\r\n  const [conversationStage, setConversationStage] = useState(\"initial\")\r\n  const [prescription, setPrescription] = useState([]);\r\n  const [prescriptionEnable, setPrescriptionEnable] = useState(false);\r\n\r\n  const findSymptom = (question) => {\r\n    const lowerQuestion = question.toLowerCase()\r\n    const qaSet = medicalQA[language]\r\n    for (const key of Object.keys(qaSet)) {\r\n      if (lowerQuestion.includes(key.toLowerCase())) {\r\n        return key\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n\r\n  const getResponse = (symptom, duration, tookMedicine, medicineTaken) => {\r\n    setPrescription()\r\n    const { remedies, medications } = medicalQA[language][symptom];\r\n    let response = `You've been experiencing ${symptom} for ${duration}. ${languages[language].recommendRemedies}\\n\\n`;\r\n    response += remedies.map((remedy, index) => `${index + 1}. ${remedy}`).join(\"\\n\");\r\n\r\n    if (!tookMedicine) {\r\n        response += `\\n\\n${languages[language].recommendMedication}\\n\\n`;\r\n        response += medications.map((medication, index) => {\r\n            const { name, dosage } = medication;  // Assuming each medication has a `name` and `dosage` field\r\n            return `${index + 1}. ${name} - Dosage: ${dosage}`;\r\n        }).join(\"\\n\");\r\n        response += `\\n\\n${languages[language].askDosage}`;\r\n    } else if (medicineTaken) {\r\n        const isCorrectMedication = medications.some(med => \r\n            medicineTaken.toLowerCase().includes(med.name.toLowerCase())\r\n        );\r\n\r\n        if (isCorrectMedication) {\r\n            const correctMed = medications.find(med => \r\n                medicineTaken.toLowerCase().includes(med.name.toLowerCase())\r\n            );\r\n            response += languages[language].correctMedication.replace(\"{0}\", medicineTaken);\r\n            response += ` Dosage: ${correctMed.dosage}`;  // Adding correct dosage information\r\n        } else {\r\n            response += languages[language].incorrectMedication.replace(\"{0}\", medicineTaken);\r\n            response += `\\n\\n${languages[language].recommendMedication}\\n\\n`;\r\n            response += medications.map((medication, index) => {\r\n                const { name, dosage } = medication;\r\n                return `${index + 1}. ${name} - Dosage: ${dosage}`;\r\n            }).join(\"\\n\");\r\n        }\r\n    }\r\n\r\n    return response;\r\n};\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (input.trim() === \"\") return\r\n\r\n    const userMessage = { text: input, sender: \"user\" }\r\n    setMessages(prev => [...prev, userMessage])\r\n\r\n    let botResponse \r\n\r\n    const lowerInput = input.toLowerCase()\r\n    if (\r\n      lowerInput === \"hello\" || \r\n      lowerInput === \"hi\" || \r\n      lowerInput === \"hie\" ||\r\n      lowerInput === \"नमस्ते\" || // Hindi\r\n      lowerInput === \"नमस्कार\" // Marathi\r\n    ) {\r\n      botResponse = { text: languages[language].greeting, sender: \"bot\" }\r\n    } else if (\r\n      lowerInput === \"thank you\" || \r\n      lowerInput === \"thanks\" ||\r\n      lowerInput === \"धन्यवाद\" || // Hindi\r\n      lowerInput === \"आभार\" // Marathi\r\n    ) {\r\n      botResponse = { text: languages[language].thankYou, sender: \"bot\" }\r\n\r\n\r\n\r\n    } else {\r\n      switch (conversationStage) {\r\n        case \"initial\":\r\n          const symptom = findSymptom(input)\r\n          if (symptom) {\r\n            setCurrentSymptom(symptom)\r\n            botResponse = { text: languages[language].askDuration, sender: \"bot\" }\r\n            setConversationStage(\"askingDuration\")\r\n          } else {\r\n            botResponse = { text: languages[language].notFound, sender: \"bot\" }\r\n            setConversationStage(\"initial\")\r\n          }\r\n          break\r\n        case \"askingDuration\":\r\n          botResponse = { text: languages[language].askMedicine, sender: \"bot\" }\r\n          setConversationStage(\"askingMedicine\")\r\n          break\r\n        case \"askingMedicine\":\r\n          const tookMedicine = input.toLowerCase().includes(\"yes\") || \r\n                               input.toLowerCase().includes(\"हां\") || // Hindi\r\n                               input.toLowerCase().includes(\"होय\") // Marathi\r\n          if (tookMedicine) {\r\n            botResponse = { text: languages[language].askWhichMedicine, sender: \"bot\" }\r\n            setConversationStage(\"askingWhichMedicine\")\r\n          } else {\r\n            botResponse = { text: getResponse(currentSymptom, messages[messages.length - 2].text, false, null), sender: \"bot\" }\r\n            setConversationStage(\"initial\")\r\n            setCurrentSymptom(null)\r\n          }\r\n          break\r\n        case \"askingWhichMedicine\":\r\n          botResponse = { text: getResponse(currentSymptom, messages[messages.length - 4].text, true, input), sender: \"bot\" }\r\n          setConversationStage(\"initial\")\r\n          setCurrentSymptom(null)\r\n          break\r\n        default:\r\n          botResponse = { text: languages[language].notFound, sender: \"bot\" }\r\n          setConversationStage(\"initial\")\r\n      }\r\n    }\r\n    setMessages(prev => [...prev, botResponse])\r\n    setInput(\"\")\r\n  }\r\n\r\n  const handleLanguageChange = (newLanguage) => {\r\n    setLanguage(newLanguage)\r\n    setMessages([{ text: languages[newLanguage].welcome, sender: \"bot\" }])\r\n    setCurrentSymptom(null)\r\n    setConversationStage(\"initial\")\r\n  }\r\n\r\n  const handleClearChat = () => {\r\n    setMessages([{ text: languages[language].welcome, sender: \"bot\" }])\r\n    setCurrentSymptom(null)\r\n    setConversationStage(\"initial\")\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h2 className=\"title\">MEDICONNECT</h2>\r\n        <div className=\"language-controls\">\r\n          <select onChange={(e) => handleLanguageChange(e.target.value)} defaultValue={language}>\r\n            <option value=\"english\">English</option>\r\n            <option value=\"hindi\">हिंदी</option>\r\n            <option value=\"marathi\">मराठी</option>\r\n          </select>\r\n          <button onClick={handleClearChat} className=\"clear-button\" aria-label={languages[language].clearChat}>\r\n            <Trash2 className=\"icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {prescriptionEnable && <div>\r\n        <Prescription symptoms={[]} remedies={[]} medications={[]} />\r\n      </div> }\r\n      <div className=\"messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender === \"user\" ? \"user\" : \"admin\"}`}>\r\n            <span className={`message-bubble ${message.sender === \"user\" ? \"user-bubble\" : \"admin-bubble\"}`}>\r\n              {message.text.split('\\n').map((line, i) => (\r\n                <span key={i} className=\"message-line\">{line}</span>\r\n              ))}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"input-form\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder={languages[language].placeholder}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            aria-label={languages[language].placeholder}\r\n            className=\"input\"\r\n          />\r\n          <button type=\"submit\" className=\"send-button\" aria-label=\"Send message\">\r\n            <Send className=\"icon\" />\r\n            <span className=\"sr-only\">Send</span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"disclaimer\">{languages[language].disclaimer}</div>\r\n    </div>\r\n    <div>\r\n        {currentSymptom && <VideoRecommendations symptom={currentSymptom} /> }\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MEDICONNECTChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}