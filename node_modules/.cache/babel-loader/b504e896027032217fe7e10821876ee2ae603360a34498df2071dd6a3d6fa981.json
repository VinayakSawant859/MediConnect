{"ast":null,"code":"import axios from 'axios';\nconst API_KEY = 'AIzaSyAKlTOimxiUY4mCFlulFLmXFYlt5x6TOr8'; // Use your actual API key\n\nexport async function fetchYouTubeRecommendations(searchQuery) {\n  const languages = ['hi']; // Only Hindi\n  const maxResults = 9; // Limit the number of results\n\n  const fetchVideos = async lang => {\n    const query = `${searchQuery} treatment`; // Modify this as necessary\n    const URL = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(query)}&type=video&key=${API_KEY}&maxResults=${maxResults}&relevanceLanguage=${lang}`;\n    try {\n      const response = await axios.get(URL);\n      return response.data.items;\n    } catch (error) {\n      console.error(\"Error fetching YouTube videos\", error);\n      return [];\n    }\n  };\n  const hindiVideos = await fetchVideos('hi'); // Fetch Hindi videos only\n\n  // Remove duplicates and return\n  const uniqueVideos = Array.from(new Set(hindiVideos.map(video => video.id.videoId))).map(id => hindiVideos.find(video => video.id.videoId === id));\n\n  // Shuffle the unique videos to randomize them\n  const shuffledVideos = uniqueVideos.sort(() => Math.random() - 0.5);\n  return shuffledVideos.slice(0, maxResults); // Limit to the desired number of results\n}","map":{"version":3,"names":["axios","API_KEY","fetchYouTubeRecommendations","searchQuery","languages","maxResults","fetchVideos","lang","query","URL","encodeURIComponent","response","get","data","items","error","console","hindiVideos","uniqueVideos","Array","from","Set","map","video","id","videoId","find","shuffledVideos","sort","Math","random","slice"],"sources":["C:/Users/ADMIN/test/src/youtubeService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_KEY = 'AIzaSyAKlTOimxiUY4mCFlulFLmXFYlt5x6TOr8'; // Use your actual API key\r\n\r\nexport async function fetchYouTubeRecommendations(searchQuery) {\r\n    const languages = ['hi']; // Only Hindi\r\n    const maxResults = 9; // Limit the number of results\r\n\r\n    const fetchVideos = async (lang) => {\r\n        const query = `${searchQuery} treatment`; // Modify this as necessary\r\n        const URL = `https://www.googleapis.com/youtube/v3/search?part=snippet&q=${encodeURIComponent(query)}&type=video&key=${API_KEY}&maxResults=${maxResults}&relevanceLanguage=${lang}`;\r\n        \r\n        try {\r\n            const response = await axios.get(URL);\r\n            return response.data.items;\r\n        } catch (error) {\r\n            console.error(\"Error fetching YouTube videos\", error);\r\n            return [];\r\n        }\r\n    };\r\n\r\n    const hindiVideos = await fetchVideos('hi'); // Fetch Hindi videos only\r\n\r\n    // Remove duplicates and return\r\n    const uniqueVideos = Array.from(new Set(hindiVideos.map(video => video.id.videoId)))\r\n        .map(id => hindiVideos.find(video => video.id.videoId === id));\r\n\r\n    // Shuffle the unique videos to randomize them\r\n    const shuffledVideos = uniqueVideos.sort(() => Math.random() - 0.5);\r\n\r\n    return shuffledVideos.slice(0, maxResults); // Limit to the desired number of results\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,yCAAyC,CAAC,CAAC;;AAE3D,OAAO,eAAeC,2BAA2BA,CAACC,WAAW,EAAE;EAC3D,MAAMC,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1B,MAAMC,UAAU,GAAG,CAAC,CAAC,CAAC;;EAEtB,MAAMC,WAAW,GAAG,MAAOC,IAAI,IAAK;IAChC,MAAMC,KAAK,GAAG,GAAGL,WAAW,YAAY,CAAC,CAAC;IAC1C,MAAMM,GAAG,GAAG,+DAA+DC,kBAAkB,CAACF,KAAK,CAAC,mBAAmBP,OAAO,eAAeI,UAAU,sBAAsBE,IAAI,EAAE;IAEnL,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACH,GAAG,CAAC;MACrC,OAAOE,QAAQ,CAACE,IAAI,CAACC,KAAK;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAME,WAAW,GAAG,MAAMX,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMY,YAAY,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,WAAW,CAACK,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,OAAO,CAAC,CAAC,CAAC,CAC/EH,GAAG,CAACE,EAAE,IAAIP,WAAW,CAACS,IAAI,CAACH,KAAK,IAAIA,KAAK,CAACC,EAAE,CAACC,OAAO,KAAKD,EAAE,CAAC,CAAC;;EAElE;EACA,MAAMG,cAAc,GAAGT,YAAY,CAACU,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAEnE,OAAOH,cAAc,CAACI,KAAK,CAAC,CAAC,EAAE1B,UAAU,CAAC,CAAC,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}