{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\test\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MEDICONNECTChatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [lang, setLang] = useState('english');\n  const [chatState, setChatState] = useState('initial'); // State tracking\n\n  const handleUserInput = e => {\n    e.preventDefault();\n    const response = processUserInput(userInput, lang);\n    setMessages(prev => [...prev, {\n      text: userInput,\n      isUser: true\n    }, response]);\n    setUserInput('');\n  };\n  const processUserInput = (input, lang) => {\n    // Convert input to lowercase for case-insensitive matching\n    const lowerInput = input.toLowerCase();\n\n    // Check if the user mentioned symptoms\n    const symptoms = Object.keys(symptomMapping);\n    let matchedSymptom = null;\n    for (let symptom of symptoms) {\n      if (lowerInput.includes(symptom)) {\n        matchedSymptom = symptom;\n        break;\n      }\n    }\n\n    // Handle the states based on user input\n    if (matchedSymptom) {\n      setChatState('askMedicine'); // Move to ask medicine state\n      return {\n        text: languages[lang].askMedicine,\n        isUser: false\n      };\n    }\n\n    // Handle the askMedicine state\n    if (chatState === 'askMedicine') {\n      // If user responds about medication\n      if (lowerInput.includes('yes')) {\n        setChatState('askWhichMedicine'); // Move to ask which medicine state\n        return {\n          text: languages[lang].askWhichMedicine,\n          isUser: false\n        };\n      } else {\n        setChatState('initial'); // Reset state\n        return {\n          text: languages[lang].suggestConsult,\n          isUser: false\n        };\n      }\n    }\n\n    // Handle the askWhichMedicine state\n    if (chatState === 'askWhichMedicine') {\n      const medication = input; // Get the medication from user input\n      const medicalData = medicalQA[lang][symptomMapping[matchedSymptom]];\n      if (medicalData) {\n        // Assuming you have some logic to determine if the medication is correct\n        const isCorrectMedication = checkMedication(medication, medicalData.medications);\n        if (isCorrectMedication) {\n          setChatState('initial'); // Reset state\n          return {\n            text: languages[lang].correctMedication.replace(\"{0}\", medication),\n            isUser: false\n          };\n        } else {\n          setChatState('initial'); // Reset state\n          return {\n            text: languages[lang].incorrectMedication.replace(\"{0}\", medication),\n            isUser: false\n          };\n        }\n      }\n    }\n\n    // If no keywords match, return a not found message\n    return {\n      text: languages[lang].notFound,\n      isUser: false\n    };\n  };\n  const checkMedication = (medication, validMedications) => {\n    return validMedications.some(validMed => validMed.toLowerCase() === medication.toLowerCase());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.isUser ? 'user-message' : 'bot-message',\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUserInput,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        placeholder: languages[lang].placeholder,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n// Example language data (only part shown for brevity)\n_s(MEDICONNECTChatbot, \"bCf/uIoyfAdCZsQ7mFvGPsx2MJI=\");\n_c = MEDICONNECTChatbot;\nconst languages = {\n  english: {\n    welcome: \"Hello! I'm MEDICONNECT, your medical assistant. How can I help you today?\",\n    placeholder: \"Type your medical question...\",\n    notFound: \"I'm sorry, I don't have specific information about that. Please consult a healthcare professional for accurate medical advice.\",\n    askMedicine: \"Have you taken any medication for this?\",\n    askWhichMedicine: \"Which medication have you taken?\",\n    suggestConsult: \"If symptoms persist or worsen, please consult a healthcare professional.\",\n    correctMedication: \"You mentioned taking {0}. This is an appropriate medication for your symptoms.\",\n    incorrectMedication: \"The medication you mentioned ({0}) may not be the most appropriate for your symptoms.\"\n  },\n  hindi: {\n    welcome: \"नमस्ते! मैं MEDICONNECT हूं, आपका चिकित्सा सहायक। आज मैं आपकी कैसे मदद कर सकता हूं?\",\n    placeholder: \"अपना चिकित्सा प्रश्न टाइप करें...\",\n    notFound: \"मुझे इस बारे में विशेष जानकारी नहीं है। कृपया सटीक चिकित्सा सलाह के लिए किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\n    askMedicine: \"क्या आपने इसके लिए कोई दवा ली है?\",\n    askWhichMedicine: \"आपने कौन सी दवा ली है?\",\n    suggestConsult: \"यदि लक्षण बने रहते हैं या बिगड़ जाते हैं, तो कृपया किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\n    correctMedication: \"आपने {0} लेने का उल्लेख किया। यह आपके लक्षणों के लिए एक उपयुक्त दवा है।\",\n    incorrectMedication: \"आपके द्वारा उल्लेखित दवा ({0}) आपके लक्षणों के लिए सबसे उपयुक्त नहीं हो सकती है। यहां कुछ अधिक उचित विकल्प हैं:\"\n  },\n  marathi: {\n    welcome: \"नमस्कार! मी MEDICONNECT आहे, तुमचा वैद्यकीय सहाय्यक. आज मी तुमची कशी मदत करू शकतो?\",\n    placeholder: \"तुमचा वैद्यकीय प्रश्न टाइप करा...\",\n    notFound: \"मला याबद्दल विशिष्ट माहिती नाही. कृपया अचूक वैद्यकीय सल्ल्यासाठी आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\n    askMedicine: \"तुम्ही यासाठी कोणतेही औषध घेतले आहे का?\",\n    askWhichMedicine: \"तुम्ही कोणते औषध घेतले आहे?\",\n    suggestConsult: \"जर लक्षणे कायम राहिली किंवा वाढली तर कृपया आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\n    correctMedication: \"तुम्ही {0} घेतल्याचा उल्लेख केला. हे तुमच्या लक्षणांसाठी योग्य औषध आहे.\",\n    incorrectMedication: \"तुम्ही उल्लेख केलेले औषध ({0}) तुमच्या लक्षणांसाठी सर्वात योग्य नसू शकते. येथे काही अधिक योग्य पर्याय आहेत:\"\n  }\n};\n\n// Example symptom mapping\nconst symptomMapping = {\n  headache: \"headache\",\n  fever: \"fever\",\n  cough: \"cough\",\n  cold: \"cold\"\n};\n\n// Example medical data\nconst medicalQA = {\n  english: {\n    headache: {\n      remedies: [\"Drink plenty of water\", \"Rest in a dark room\"],\n      medications: [\"Aspirin\", \"Ibuprofen\"]\n    },\n    fever: {\n      remedies: [\"Stay hydrated\", \"Take a lukewarm bath\"],\n      medications: [\"Paracetamol\", \"Ibuprofen\"]\n    }\n    // Add more symptoms here...\n  },\n  hindi: {\n    headache: {\n      remedies: [\"पाणी प्या\", \"गडद खोलीत आराम करा\"],\n      medications: [\"असपिरिन\", \"आयबूप्रोफेन\"]\n    },\n    fever: {\n      remedies: [\"पाण्याची गळती करा\", \"कोमट बाथ घ्या\"],\n      medications: [\"पॅरासिटामोल\", \"आयबूप्रोफेन\"]\n    }\n    // Add more symptoms here...\n  },\n  marathi: {\n    headache: {\n      remedies: [\"पाणी प्या\", \"अंधाऱ्या खोलीत आराम करा\"],\n      medications: [\"असपिरिन\", \"आयबूप्रोफेन\"]\n    },\n    fever: {\n      remedies: [\"पाण्याचे सेवन करा\", \"गडद बाथ घ्या\"],\n      medications: [\"पॅरासिटामोल\", \"आयबूप्रोफेन\"]\n    }\n    // Add more symptoms here...\n  }\n};\nexport default MEDICONNECTChatbot;\nvar _c;\n$RefreshReg$(_c, \"MEDICONNECTChatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MEDICONNECTChatbot","_s","messages","setMessages","userInput","setUserInput","lang","setLang","chatState","setChatState","handleUserInput","e","preventDefault","response","processUserInput","prev","text","isUser","input","lowerInput","toLowerCase","symptoms","Object","keys","symptomMapping","matchedSymptom","symptom","includes","languages","askMedicine","askWhichMedicine","suggestConsult","medication","medicalData","medicalQA","isCorrectMedication","checkMedication","medications","correctMedication","replace","incorrectMedication","notFound","validMedications","some","validMed","children","map","msg","index","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","placeholder","onChange","target","_c","english","welcome","hindi","marathi","headache","fever","cough","cold","remedies","$RefreshReg$"],"sources":["C:/Users/ADMIN/test/src/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst MEDICONNECTChatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [lang, setLang] = useState('english');\r\n  const [chatState, setChatState] = useState('initial'); // State tracking\r\n\r\n  const handleUserInput = (e) => {\r\n    e.preventDefault();\r\n    const response = processUserInput(userInput, lang);\r\n    setMessages((prev) => [...prev, { text: userInput, isUser: true }, response]);\r\n    setUserInput('');\r\n  };\r\n\r\n  const processUserInput = (input, lang) => {\r\n    // Convert input to lowercase for case-insensitive matching\r\n    const lowerInput = input.toLowerCase();\r\n\r\n    // Check if the user mentioned symptoms\r\n    const symptoms = Object.keys(symptomMapping);\r\n    let matchedSymptom = null;\r\n\r\n    for (let symptom of symptoms) {\r\n      if (lowerInput.includes(symptom)) {\r\n        matchedSymptom = symptom;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Handle the states based on user input\r\n    if (matchedSymptom) {\r\n      setChatState('askMedicine'); // Move to ask medicine state\r\n      return {\r\n        text: languages[lang].askMedicine,\r\n        isUser: false\r\n      };\r\n    }\r\n\r\n    // Handle the askMedicine state\r\n    if (chatState === 'askMedicine') {\r\n      // If user responds about medication\r\n      if (lowerInput.includes('yes')) {\r\n        setChatState('askWhichMedicine'); // Move to ask which medicine state\r\n        return {\r\n          text: languages[lang].askWhichMedicine,\r\n          isUser: false\r\n        };\r\n      } else {\r\n        setChatState('initial'); // Reset state\r\n        return {\r\n          text: languages[lang].suggestConsult,\r\n          isUser: false\r\n        };\r\n      }\r\n    }\r\n\r\n    // Handle the askWhichMedicine state\r\n    if (chatState === 'askWhichMedicine') {\r\n      const medication = input; // Get the medication from user input\r\n      const medicalData = medicalQA[lang][symptomMapping[matchedSymptom]];\r\n      if (medicalData) {\r\n        // Assuming you have some logic to determine if the medication is correct\r\n        const isCorrectMedication = checkMedication(medication, medicalData.medications);\r\n        if (isCorrectMedication) {\r\n          setChatState('initial'); // Reset state\r\n          return {\r\n            text: languages[lang].correctMedication.replace(\"{0}\", medication),\r\n            isUser: false\r\n          };\r\n        } else {\r\n          setChatState('initial'); // Reset state\r\n          return {\r\n            text: languages[lang].incorrectMedication.replace(\"{0}\", medication),\r\n            isUser: false\r\n          };\r\n        }\r\n      }\r\n    }\r\n\r\n    // If no keywords match, return a not found message\r\n    return {\r\n      text: languages[lang].notFound,\r\n      isUser: false\r\n    };\r\n  };\r\n\r\n  const checkMedication = (medication, validMedications) => {\r\n    return validMedications.some((validMed) => validMed.toLowerCase() === medication.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={msg.isUser ? 'user-message' : 'bot-message'}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleUserInput}>\r\n        <input\r\n          type=\"text\"\r\n          value={userInput}\r\n          placeholder={languages[lang].placeholder}\r\n          onChange={(e) => setUserInput(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Example language data (only part shown for brevity)\r\nconst languages = {\r\n  english: {\r\n    welcome: \"Hello! I'm MEDICONNECT, your medical assistant. How can I help you today?\",\r\n    placeholder: \"Type your medical question...\",\r\n    notFound: \"I'm sorry, I don't have specific information about that. Please consult a healthcare professional for accurate medical advice.\",\r\n    askMedicine: \"Have you taken any medication for this?\",\r\n    askWhichMedicine: \"Which medication have you taken?\",\r\n    suggestConsult: \"If symptoms persist or worsen, please consult a healthcare professional.\",\r\n    correctMedication: \"You mentioned taking {0}. This is an appropriate medication for your symptoms.\",\r\n    incorrectMedication: \"The medication you mentioned ({0}) may not be the most appropriate for your symptoms.\",\r\n  },\r\n  hindi: {\r\n    welcome: \"नमस्ते! मैं MEDICONNECT हूं, आपका चिकित्सा सहायक। आज मैं आपकी कैसे मदद कर सकता हूं?\",\r\n    placeholder: \"अपना चिकित्सा प्रश्न टाइप करें...\",\r\n    notFound: \"मुझे इस बारे में विशेष जानकारी नहीं है। कृपया सटीक चिकित्सा सलाह के लिए किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\r\n    askMedicine: \"क्या आपने इसके लिए कोई दवा ली है?\",\r\n    askWhichMedicine: \"आपने कौन सी दवा ली है?\",\r\n    suggestConsult: \"यदि लक्षण बने रहते हैं या बिगड़ जाते हैं, तो कृपया किसी स्वास्थ्य सेवा पेशेवर से परामर्श करें।\",\r\n    correctMedication: \"आपने {0} लेने का उल्लेख किया। यह आपके लक्षणों के लिए एक उपयुक्त दवा है।\",\r\n    incorrectMedication: \"आपके द्वारा उल्लेखित दवा ({0}) आपके लक्षणों के लिए सबसे उपयुक्त नहीं हो सकती है। यहां कुछ अधिक उचित विकल्प हैं:\",\r\n  },\r\n  marathi: {\r\n    welcome: \"नमस्कार! मी MEDICONNECT आहे, तुमचा वैद्यकीय सहाय्यक. आज मी तुमची कशी मदत करू शकतो?\",\r\n    placeholder: \"तुमचा वैद्यकीय प्रश्न टाइप करा...\",\r\n    notFound: \"मला याबद्दल विशिष्ट माहिती नाही. कृपया अचूक वैद्यकीय सल्ल्यासाठी आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\r\n    askMedicine: \"तुम्ही यासाठी कोणतेही औषध घेतले आहे का?\",\r\n    askWhichMedicine: \"तुम्ही कोणते औषध घेतले आहे?\",\r\n    suggestConsult: \"जर लक्षणे कायम राहिली किंवा वाढली तर कृपया आरोग्य सेवा व्यावसायिकाचा सल्ला घ्या.\",\r\n    correctMedication: \"तुम्ही {0} घेतल्याचा उल्लेख केला. हे तुमच्या लक्षणांसाठी योग्य औषध आहे.\",\r\n    incorrectMedication: \"तुम्ही उल्लेख केलेले औषध ({0}) तुमच्या लक्षणांसाठी सर्वात योग्य नसू शकते. येथे काही अधिक योग्य पर्याय आहेत:\",\r\n  }\r\n};\r\n\r\n// Example symptom mapping\r\nconst symptomMapping = {\r\n  headache: \"headache\",\r\n  fever: \"fever\",\r\n  cough: \"cough\",\r\n  cold: \"cold\"\r\n};\r\n\r\n// Example medical data\r\nconst medicalQA = {\r\n  english: {\r\n    headache: {\r\n      remedies: [\"Drink plenty of water\", \"Rest in a dark room\"],\r\n      medications: [\"Aspirin\", \"Ibuprofen\"]\r\n    },\r\n    fever: {\r\n      remedies: [\"Stay hydrated\", \"Take a lukewarm bath\"],\r\n      medications: [\"Paracetamol\", \"Ibuprofen\"]\r\n    },\r\n    // Add more symptoms here...\r\n  },\r\n  hindi: {\r\n    headache: {\r\n      remedies: [\"पाणी प्या\", \"गडद खोलीत आराम करा\"],\r\n      medications: [\"असपिरिन\", \"आयबूप्रोफेन\"]\r\n    },\r\n    fever: {\r\n      remedies: [\"पाण्याची गळती करा\", \"कोमट बाथ घ्या\"],\r\n      medications: [\"पॅरासिटामोल\", \"आयबूप्रोफेन\"]\r\n    },\r\n    // Add more symptoms here...\r\n  },\r\n  marathi: {\r\n    headache: {\r\n      remedies: [\"पाणी प्या\", \"अंधाऱ्या खोलीत आराम करा\"],\r\n      medications: [\"असपिरिन\", \"आयबूप्रोफेन\"]\r\n    },\r\n    fever: {\r\n      remedies: [\"पाण्याचे सेवन करा\", \"गडद बाथ घ्या\"],\r\n      medications: [\"पॅरासिटामोल\", \"आयबूप्रोफेन\"]\r\n    },\r\n    // Add more symptoms here...\r\n  },\r\n};\r\n\r\nexport default MEDICONNECTChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}