{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\test\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport VideoRecommendations from './components/VideoRecommendations';\nimport './Chatbot.css';\nimport './Prescription.css';\nimport { Trash2, Send } from \"lucide-react\";\nimport Prescription from \"./Prescription\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst medicalQA = {\n  english: {\n    // ... (existing English content)\n  },\n  hindi: {\n    // ... (existing Hindi content)\n  },\n  marathi: {\n    // ... (existing Marathi content)\n  },\n  punjabi: {\n    \"ਸਿਰਦਰਦ\": {\n      remedies: [\"ਇੱਕ ਸ਼ਾਂਤ, ਹਨੇਰੇ ਕਮਰੇ ਵਿੱਚ ਆਰਾਮ ਕਰੋ\", \"ਆਪਣੇ ਸਿਰ 'ਤੇ ਠੰਡਾ ਜਾਂ ਗਰਮ ਕੰਪ੍ਰੈਸ ਲਗਾਓ\", \"ਖੂਬ ਪਾਣੀ ਪੀਓ\", \"ਰਿਲੈਕਸੇਸ਼ਨ ਤਕਨੀਕਾਂ ਦਾ ਅਭਿਆਸ ਕਰੋ\"],\n      medications: [\"ਐਸੀਟਾਮਿਨੋਫੇਨ (ਟਾਇਲੇਨੋਲ)\", \"ਆਈਬੂਪ੍ਰੋਫੇਨ (ਐਡਵਿਲ, ਮੋਟਰਿਨ)\", \"ਐਸਪਿਰਿਨ\"]\n    },\n    \"ਬੁਖਾਰ\": {\n      remedies: [\"ਆਰਾਮ ਕਰੋ ਅਤੇ ਭਰਪੂਰ ਨੀਂਦ ਲਓ\", \"ਖੂਬ ਪਾਣੀ ਪੀਓ (ਪਾਣੀ, ਸਾਫ਼ ਸ਼ੋਰਬਾ, ਹਰਬਲ ਚਾਹ)\", \"ਹਲਕੇ ਕੱਪੜੇ ਪਹਿਨੋ\", \"ਕਮਰੇ ਨੂੰ ਠੰਡਾ ਰੱਖਣ ਲਈ ਪੰਖਾ ਜਾਂ ਏਅਰ ਕੰਡੀਸ਼ਨਰ ਦੀ ਵਰਤੋਂ ਕਰੋ\"],\n      medications: [\"ਐਸੀਟਾਮਿਨੋਫੇਨ (ਟਾਇਲੇਨੋਲ, ਪੈਰਾਸੀਟਾਮੋਲ)\", \"ਆਈਬੂਪ੍ਰੋਫੇਨ (ਐਡਵਿਲ, ਮੋਟਰਿਨ)\"]\n    },\n    \"ਖਾਂਸੀ\": {\n      remedies: [\"ਖੂਬ ਪਾਣੀ ਪੀਓ (ਪਾਣੀ, ਹਰਬਲ ਚਾਹ, ਗਰਮ ਸੂਪ)\", \"ਹਿਊਮਿਡੀਫਾਇਰ ਦੀ ਵਰਤੋਂ ਕਰੋ ਜਾਂ ਭਾਫ ਵਾਲਾ ਸ਼ਾਵਰ ਲਓ\", \"ਸ਼ਹਿਦ ਦੀ ਵਰਤੋਂ ਕਰੋ (ਬਾਲਗਾਂ ਅਤੇ 1 ਸਾਲ ਤੋਂ ਵੱਧ ਉਮਰ ਦੇ ਬੱਚਿਆਂ ਲਈ)\", \"ਧੂੰਏਂ ਜਾਂ ਤਿੱਖੀ ਗੰਧ ਵਰਗੇ ਉਤੇਜਕਾਂ ਤੋਂ ਬਚੋ\"],\n      medications: [\"ਡੈਕਸਟ੍ਰੋਮੈਥੋਰਫਨ (ਸੁੱਕੀ ਖਾਂਸੀ ਲਈ)\", \"ਗੁਆਇਫੇਨੇਸਿਨ (ਪ੍ਰੋਡਕਟਿਵ ਖਾਂਸੀ ਲਈ)\"]\n    },\n    \"ਜ਼ੁਕਾਮ\": {\n      remedies: [\"ਭਰਪੂਰ ਆਰਾਮ ਕਰੋ\", \"ਖੂਬ ਪਾਣੀ ਪੀਓ\", \"ਨਮਕ ਦੇ ਪਾਣੀ ਨਾਲ ਗਰਾਰੇ ਕਰੋ\", \"ਸਲਾਈਨ ਨੇਜ਼ਲ ਸਪ੍ਰੇ ਦੀ ਵਰਤੋਂ ਕਰੋ\"],\n      medications: [\"ਡੀਕੰਜੇਸਟੈਂਟਸ\", \"ਐਂਟੀਹਿਸਟਾਮਾਈਨਸ\", \"ਦਰਦ ਨਿਵਾਰਕ (ਐਸੀਟਾਮਿਨੋਫੇਨ, ਆਈਬੂਪ੍ਰੋਫੇਨ)\"]\n    }\n  },\n  tamil: {\n    \"தலைவலி\": {\n      remedies: [\"அமைதியான, இருட்டான அறையில் ஓய்வெடுக்கவும்\", \"உங்கள் தலையில் குளிர் அல்லது சூடான கம்ப்ரஸ் வைக்கவும்\", \"நிறைய தண்ணீர் குடிக்கவும்\", \"ஓய்வு நுட்பங்களை பயிற்சி செய்யவும்\"],\n      medications: [\"அசிட்டமினோஃபென் (டைலினால்)\", \"ஐப்யூப்ரோஃபன் (அட்வில், மோட்ரின்)\", \"ஆஸ்பிரின்\"]\n    },\n    \"காய்ச்சல்\": {\n      remedies: [\"ஓய்வெடுத்து போதுமான தூக்கம் பெறவும்\", \"நிறைய தண்ணீர் குடிக்கவும் (தண்ணீர், தெளிவான குழம்புகள், மூலிகை தேநீர்)\", \"இலகுவான ஆடைகளை அணியவும்\", \"அறையை குளிராக வைத்திருக்க விசிறி அல்லது ஏர் கண்டிஷனர் பயன்படுத்தவும்\"],\n      medications: [\"அசிட்டமினோஃபென் (டைலினால், பாராசிட்டமோல்)\", \"ஐப்யூப்ரோஃபன் (அட்வில், மோட்ரின்)\"]\n    },\n    \"இருமல்\": {\n      remedies: [\"நிறைய தண்ணீர் குடிக்கவும் (தண்ணீர், மூலிகை தேநீர், சூடான சூப்)\", \"ஈரப்பதமாக்கி பயன்படுத்தவும் அல்லது நீராவி ஷவர் எடுக்கவும்\", \"தேன் பயன்படுத்தவும் (வயது வந்தோர் மற்றும் 1 வயதுக்கு மேற்பட்ட குழந்தைகளுக்கு)\", \"புகை அல்லது கடுமையான வாசனைகளை தவிர்க்கவும்\"],\n      medications: [\"டெக்ஸ்ட்ரோமெத்தார்பன் (உலர் இருமல்)\", \"குவைஃபெனெசின் (உற்பத்தி இருமல்)\"]\n    },\n    \"சளி\": {\n      remedies: [\"போதுமான ஓய்வு எடுக்கவும்\", \"நிறைய தண்ணீர் குடிக்கவும்\", \"உப்பு நீரால் கழுவவும்\", \"சாலைன் நாசி ஸ்ப்ரே பயன்படுத்தவும்\"],\n      medications: [\"டிகான்ஜெஸ்டன்ட்ஸ்\", \"ஆன்டிஹிஸ்டமைன்கள்\", \"வலி நிவாரணிகள் (அசிட்டமினோஃபென், ஐப்யூப்ரோஃபன்)\"]\n    }\n  }\n};\nconst MEDICONNECTChatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [language, setLanguage] = useState(\"english\");\n  const [currentSymptom, setCurrentSymptom] = useState(null);\n  const [currentRemedies, setCurrentRemedies] = useState(null);\n  const [conversationStage, setConversationStage] = useState(\"initial\");\n  const [currentMedication, setCurrentMedication] = useState(null);\n  const [prescription, setPrescription] = useState([]);\n  const [prescriptionEnable, setPrescriptionEnable] = useState(false);\n  const findSymptom = question => {\n    const lowerQuestion = question.toLowerCase();\n    const qaSet = medicalQA[language];\n    for (const key of Object.keys(qaSet)) {\n      if (lowerQuestion.includes(key.toLowerCase())) {\n        return key;\n      }\n    }\n    return null;\n  };\n  const getResponse = (symptom, duration, tookMedicine, medicineTaken) => {\n    const {\n      remedies,\n      medications\n    } = medicalQA[language][symptom];\n    let response = `You've been experiencing ${symptom} for ${duration}. ${languages[language].recommendRemedies}\\n\\n`;\n    response += remedies.map((remedy, index) => `${index + 1}. ${remedy}`).join(\"\\n\");\n    setCurrentRemedies(remedies);\n    if (!tookMedicine) {\n      response += `\\n\\n${languages[language].recommendMedication}\\n\\n`;\n      response += medications.map((medication, index) => {\n        const {\n          name,\n          dosage\n        } = medication; // Assuming each medication has a `name` and `dosage` field\n        return `${index + 1}. ${name} - Dosage: ${dosage}`;\n      }).join(\"\\n\");\n      response += `\\n\\n${languages[language].askDosage}`;\n    } else if (medicineTaken) {\n      const isCorrectMedication = medications.some(med => medicineTaken.toLowerCase().includes(med.name.toLowerCase()));\n      if (isCorrectMedication) {\n        const correctMed = medications.find(med => medicineTaken.toLowerCase().includes(med.name.toLowerCase()));\n        response += languages[language].correctMedication.replace(\"{0}\", medicineTaken);\n        response += ` Dosage: ${correctMed.dosage}`; // Adding correct dosage information\n      } else {\n        response += languages[language].incorrectMedication.replace(\"{0}\", medicineTaken);\n        response += `\\n\\n${languages[language].recommendMedication}\\n\\n`;\n        response += medications.map((medication, index) => {\n          const {\n            name,\n            dosage\n          } = medication;\n          return `${index + 1}. ${name} - Dosage: ${dosage}`;\n        }).join(\"\\n\");\n        setCurrentMedication(medications);\n      }\n    }\n    return response;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (input.trim() === \"\") return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMessage]);\n    let botResponse;\n    const lowerInput = input.toLowerCase();\n    if (lowerInput === \"hello\" || lowerInput === \"hi\" || lowerInput === \"Hie\" || lowerInput === \"नमस्ते\" ||\n    // Hindi\n    lowerInput === \"नमस्कार\" // Marathi\n    ) {\n      botResponse = {\n        text: languages[language].greeting,\n        sender: \"bot\"\n      };\n    } else if (lowerInput === \"thank you\" || lowerInput === \"thanks\" || lowerInput === \"धन्यवाद\" ||\n    // Hindi\n    lowerInput === \"आभार\" // Marathi\n    ) {\n      botResponse = {\n        text: languages[language].thankYou,\n        sender: \"bot\"\n      };\n      setPrescriptionEnable(true);\n    } else {\n      switch (conversationStage) {\n        case \"initial\":\n          const symptom = findSymptom(input);\n          if (symptom) {\n            setCurrentSymptom(symptom);\n            botResponse = {\n              text: languages[language].askDuration,\n              sender: \"bot\"\n            };\n            setConversationStage(\"askingDuration\");\n          } else {\n            botResponse = {\n              text: languages[language].notFound,\n              sender: \"bot\"\n            };\n            setConversationStage(\"initial\");\n          }\n          break;\n        case \"askingDuration\":\n          botResponse = {\n            text: languages[language].askMedicine,\n            sender: \"bot\"\n          };\n          setConversationStage(\"askingMedicine\");\n          break;\n        case \"askingMedicine\":\n          const tookMedicine = input.toLowerCase().includes(\"yes\") || input.toLowerCase().includes(\"हां\") ||\n          // Hindi\n          input.toLowerCase().includes(\"होय\"); // Marathi\n          if (tookMedicine) {\n            botResponse = {\n              text: languages[language].askWhichMedicine,\n              sender: \"bot\"\n            };\n            setConversationStage(\"askingWhichMedicine\");\n          } else {\n            botResponse = {\n              text: getResponse(currentSymptom, messages[messages.length - 2].text, false, null),\n              sender: \"bot\"\n            };\n            setConversationStage(\"initial\");\n            // setCurrentSymptom(null)\n          }\n          break;\n        case \"askingWhichMedicine\":\n          botResponse = {\n            text: getResponse(currentSymptom, messages[messages.length - 4].text, true, input),\n            sender: \"bot\"\n          };\n          setConversationStage(\"initial\");\n          // setCurrentSymptom(null)\n          break;\n        default:\n          botResponse = {\n            text: languages[language].notFound,\n            sender: \"bot\"\n          };\n          setConversationStage(\"initial\");\n      }\n    }\n    setMessages(prev => [...prev, botResponse]);\n    setInput(\"\");\n  };\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n    setMessages([{\n      text: languages[newLanguage].welcome,\n      sender: \"bot\"\n    }]);\n    setCurrentSymptom(null);\n    setConversationStage(\"initial\");\n  };\n  const handleClearChat = () => {\n    setMessages([{\n      text: languages[language].welcome,\n      sender: \"bot\"\n    }]);\n    setCurrentSymptom(null);\n    setConversationStage(\"initial\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"title\",\n          children: \"MEDICONNECT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => handleLanguageChange(e.target.value),\n            defaultValue: language,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"english\",\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"hindi\",\n              children: \"\\u0939\\u093F\\u0902\\u0926\\u0940\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"marathi\",\n              children: \"\\u092E\\u0930\\u093E\\u0920\\u0940\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"punjabi\",\n              children: \"\\u0A2A\\u0A70\\u0A1C\\u0A3E\\u0A2C\\u0A40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"tamil\",\n              children: \"\\u0BA4\\u0BAE\\u0BBF\\u0BB4\\u0BCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClearChat,\n            className: \"clear-button\",\n            \"aria-label\": languages[language].clearChat,\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender === \"user\" ? \"user\" : \"admin\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `message-bubble ${message.sender === \"user\" ? \"user-bubble\" : \"admin-bubble\"}`,\n            children: message.text.split('\\n').map((line, i) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-line\",\n              children: line\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"input-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: languages[language].placeholder,\n            value: input,\n            onChange: e => setInput(e.target.value),\n            \"aria-label\": languages[language].placeholder,\n            className: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            \"aria-label\": \"Send message\",\n            children: [/*#__PURE__*/_jsxDEV(Send, {\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"sr-only\",\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disclaimer\",\n        children: languages[language].disclaimer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }, this), prescriptionEnable && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Prescription, {\n        symptoms: currentSymptom,\n        remedies: currentRemedies,\n        medications: currentMedication\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentSymptom && /*#__PURE__*/_jsxDEV(VideoRecommendations, {\n        symptom: currentSymptom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(MEDICONNECTChatbot, \"mBbu1efZokDLoQK/l9vviYLZOPY=\");\n_c = MEDICONNECTChatbot;\nexport default MEDICONNECTChatbot;\nvar _c;\n$RefreshReg$(_c, \"MEDICONNECTChatbot\");","map":{"version":3,"names":["useState","VideoRecommendations","Trash2","Send","Prescription","jsxDEV","_jsxDEV","Fragment","_Fragment","medicalQA","english","hindi","marathi","punjabi","remedies","medications","tamil","MEDICONNECTChatbot","_s","messages","setMessages","input","setInput","language","setLanguage","currentSymptom","setCurrentSymptom","currentRemedies","setCurrentRemedies","conversationStage","setConversationStage","currentMedication","setCurrentMedication","prescription","setPrescription","prescriptionEnable","setPrescriptionEnable","findSymptom","question","lowerQuestion","toLowerCase","qaSet","key","Object","keys","includes","getResponse","symptom","duration","tookMedicine","medicineTaken","response","languages","recommendRemedies","map","remedy","index","join","recommendMedication","medication","name","dosage","askDosage","isCorrectMedication","some","med","correctMed","find","correctMedication","replace","incorrectMedication","handleSubmit","e","preventDefault","trim","userMessage","text","sender","prev","botResponse","lowerInput","greeting","thankYou","askDuration","notFound","askMedicine","askWhichMedicine","length","handleLanguageChange","newLanguage","welcome","handleClearChat","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","defaultValue","onClick","clearChat","message","split","line","i","onSubmit","type","placeholder","disclaimer","symptoms","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/test/src/Chatbot.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport VideoRecommendations from './components/VideoRecommendations';\r\nimport './Chatbot.css';\r\nimport './Prescription.css';\r\nimport { Trash2, Send } from \"lucide-react\";\r\nimport Prescription from \"./Prescription\";\r\n\r\nconst medicalQA = {\r\n  english: {\r\n    // ... (existing English content)\r\n  },\r\n  hindi: {\r\n    // ... (existing Hindi content)\r\n  },\r\n  marathi: {\r\n    // ... (existing Marathi content)\r\n  },\r\n  punjabi: {\r\n    \"ਸਿਰਦਰਦ\": {\r\n      remedies: [\r\n        \"ਇੱਕ ਸ਼ਾਂਤ, ਹਨੇਰੇ ਕਮਰੇ ਵਿੱਚ ਆਰਾਮ ਕਰੋ\",\r\n        \"ਆਪਣੇ ਸਿਰ 'ਤੇ ਠੰਡਾ ਜਾਂ ਗਰਮ ਕੰਪ੍ਰੈਸ ਲਗਾਓ\",\r\n        \"ਖੂਬ ਪਾਣੀ ਪੀਓ\",\r\n        \"ਰਿਲੈਕਸੇਸ਼ਨ ਤਕਨੀਕਾਂ ਦਾ ਅਭਿਆਸ ਕਰੋ\"\r\n      ],\r\n      medications: [\r\n        \"ਐਸੀਟਾਮਿਨੋਫੇਨ (ਟਾਇਲੇਨੋਲ)\",\r\n        \"ਆਈਬੂਪ੍ਰੋਫੇਨ (ਐਡਵਿਲ, ਮੋਟਰਿਨ)\",\r\n        \"ਐਸਪਿਰਿਨ\"\r\n      ]\r\n    },\r\n    \"ਬੁਖਾਰ\": {\r\n      remedies: [\r\n        \"ਆਰਾਮ ਕਰੋ ਅਤੇ ਭਰਪੂਰ ਨੀਂਦ ਲਓ\",\r\n        \"ਖੂਬ ਪਾਣੀ ਪੀਓ (ਪਾਣੀ, ਸਾਫ਼ ਸ਼ੋਰਬਾ, ਹਰਬਲ ਚਾਹ)\",\r\n        \"ਹਲਕੇ ਕੱਪੜੇ ਪਹਿਨੋ\",\r\n        \"ਕਮਰੇ ਨੂੰ ਠੰਡਾ ਰੱਖਣ ਲਈ ਪੰਖਾ ਜਾਂ ਏਅਰ ਕੰਡੀਸ਼ਨਰ ਦੀ ਵਰਤੋਂ ਕਰੋ\"\r\n      ],\r\n      medications: [\r\n        \"ਐਸੀਟਾਮਿਨੋਫੇਨ (ਟਾਇਲੇਨੋਲ, ਪੈਰਾਸੀਟਾਮੋਲ)\",\r\n        \"ਆਈਬੂਪ੍ਰੋਫੇਨ (ਐਡਵਿਲ, ਮੋਟਰਿਨ)\"\r\n      ]\r\n    },\r\n    \"ਖਾਂਸੀ\": {\r\n      remedies: [\r\n        \"ਖੂਬ ਪਾਣੀ ਪੀਓ (ਪਾਣੀ, ਹਰਬਲ ਚਾਹ, ਗਰਮ ਸੂਪ)\",\r\n        \"ਹਿਊਮਿਡੀਫਾਇਰ ਦੀ ਵਰਤੋਂ ਕਰੋ ਜਾਂ ਭਾਫ ਵਾਲਾ ਸ਼ਾਵਰ ਲਓ\",\r\n        \"ਸ਼ਹਿਦ ਦੀ ਵਰਤੋਂ ਕਰੋ (ਬਾਲਗਾਂ ਅਤੇ 1 ਸਾਲ ਤੋਂ ਵੱਧ ਉਮਰ ਦੇ ਬੱਚਿਆਂ ਲਈ)\",\r\n        \"ਧੂੰਏਂ ਜਾਂ ਤਿੱਖੀ ਗੰਧ ਵਰਗੇ ਉਤੇਜਕਾਂ ਤੋਂ ਬਚੋ\"\r\n      ],\r\n      medications: [\r\n        \"ਡੈਕਸਟ੍ਰੋਮੈਥੋਰਫਨ (ਸੁੱਕੀ ਖਾਂਸੀ ਲਈ)\",\r\n        \"ਗੁਆਇਫੇਨੇਸਿਨ (ਪ੍ਰੋਡਕਟਿਵ ਖਾਂਸੀ ਲਈ)\"\r\n      ]\r\n    },\r\n    \"ਜ਼ੁਕਾਮ\": {\r\n      remedies: [\r\n        \"ਭਰਪੂਰ ਆਰਾਮ ਕਰੋ\",\r\n        \"ਖੂਬ ਪਾਣੀ ਪੀਓ\",\r\n        \"ਨਮਕ ਦੇ ਪਾਣੀ ਨਾਲ ਗਰਾਰੇ ਕਰੋ\",\r\n        \"ਸਲਾਈਨ ਨੇਜ਼ਲ ਸਪ੍ਰੇ ਦੀ ਵਰਤੋਂ ਕਰੋ\"\r\n      ],\r\n      medications: [\r\n        \"ਡੀਕੰਜੇਸਟੈਂਟਸ\",\r\n        \"ਐਂਟੀਹਿਸਟਾਮਾਈਨਸ\",\r\n        \"ਦਰਦ ਨਿਵਾਰਕ (ਐਸੀਟਾਮਿਨੋਫੇਨ, ਆਈਬੂਪ੍ਰੋਫੇਨ)\"\r\n      ]\r\n    }\r\n  },\r\n  tamil: {\r\n    \"தலைவலி\": {\r\n      remedies: [\r\n        \"அமைதியான, இருட்டான அறையில் ஓய்வெடுக்கவும்\",\r\n        \"உங்கள் தலையில் குளிர் அல்லது சூடான கம்ப்ரஸ் வைக்கவும்\",\r\n        \"நிறைய தண்ணீர் குடிக்கவும்\",\r\n        \"ஓய்வு நுட்பங்களை பயிற்சி செய்யவும்\"\r\n      ],\r\n      medications: [\r\n        \"அசிட்டமினோஃபென் (டைலினால்)\",\r\n        \"ஐப்யூப்ரோஃபன் (அட்வில், மோட்ரின்)\",\r\n        \"ஆஸ்பிரின்\"\r\n      ]\r\n    },\r\n    \"காய்ச்சல்\": {\r\n      remedies: [\r\n        \"ஓய்வெடுத்து போதுமான தூக்கம் பெறவும்\",\r\n        \"நிறைய தண்ணீர் குடிக்கவும் (தண்ணீர், தெளிவான குழம்புகள், மூலிகை தேநீர்)\",\r\n        \"இலகுவான ஆடைகளை அணியவும்\",\r\n        \"அறையை குளிராக வைத்திருக்க விசிறி அல்லது ஏர் கண்டிஷனர் பயன்படுத்தவும்\"\r\n      ],\r\n      medications: [\r\n        \"அசிட்டமினோஃபென் (டைலினால், பாராசிட்டமோல்)\",\r\n        \"ஐப்யூப்ரோஃபன் (அட்வில், மோட்ரின்)\"\r\n      ]\r\n    },\r\n    \"இருமல்\": {\r\n      remedies: [\r\n        \"நிறைய தண்ணீர் குடிக்கவும் (தண்ணீர், மூலிகை தேநீர், சூடான சூப்)\",\r\n        \"ஈரப்பதமாக்கி பயன்படுத்தவும் அல்லது நீராவி ஷவர் எடுக்கவும்\",\r\n        \"தேன் பயன்படுத்தவும் (வயது வந்தோர் மற்றும் 1 வயதுக்கு மேற்பட்ட குழந்தைகளுக்கு)\",\r\n        \"புகை அல்லது கடுமையான வாசனைகளை தவிர்க்கவும்\"\r\n      ],\r\n      medications: [\r\n        \"டெக்ஸ்ட்ரோமெத்தார்பன் (உலர் இருமல்)\",\r\n        \"குவைஃபெனெசின் (உற்பத்தி இருமல்)\"\r\n      ]\r\n    },\r\n    \"சளி\": {\r\n      remedies: [\r\n        \"போதுமான ஓய்வு எடுக்கவும்\",\r\n        \"நிறைய தண்ணீர் குடிக்கவும்\",\r\n        \"உப்பு நீரால் கழுவவும்\",\r\n        \"சாலைன் நாசி ஸ்ப்ரே பயன்படுத்தவும்\"\r\n      ],\r\n      medications: [\r\n        \"டிகான்ஜெஸ்டன்ட்ஸ்\",\r\n        \"ஆன்டிஹிஸ்டமைன்கள்\",\r\n        \"வலி நிவாரணிகள் (அசிட்டமினோஃபென், ஐப்யூப்ரோஃபன்)\"\r\n      ]\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst MEDICONNECTChatbot = () => {\r\n  const [messages, setMessages] = useState([])\r\n  const [input, setInput] = useState(\"\")\r\n  const [language, setLanguage] = useState(\"english\")\r\n  const [currentSymptom, setCurrentSymptom] = useState(null)\r\n  const [currentRemedies,setCurrentRemedies] = useState(null);\r\n  const [conversationStage, setConversationStage] = useState(\"initial\")\r\n  const [currentMedication,setCurrentMedication] = useState(null);\r\n  const [prescription, setPrescription] = useState([]);\r\n  const [prescriptionEnable, setPrescriptionEnable] = useState(false);\r\n\r\n  const findSymptom = (question) => {\r\n    const lowerQuestion = question.toLowerCase()\r\n    const qaSet = medicalQA[language]\r\n    for (const key of Object.keys(qaSet)) {\r\n      if (lowerQuestion.includes(key.toLowerCase())) {\r\n        return key\r\n      }\r\n    }\r\n    return null\r\n  }\r\n\r\n\r\n  const getResponse = (symptom, duration, tookMedicine, medicineTaken) => {\r\n    const { remedies, medications } = medicalQA[language][symptom];\r\n    let response = `You've been experiencing ${symptom} for ${duration}. ${languages[language].recommendRemedies}\\n\\n`;\r\n    response += remedies.map((remedy, index) => `${index + 1}. ${remedy}`).join(\"\\n\");\r\n    setCurrentRemedies(remedies);\r\n    if (!tookMedicine) {\r\n        response += `\\n\\n${languages[language].recommendMedication}\\n\\n`;\r\n        response += medications.map((medication, index) => {\r\n            const { name, dosage } = medication;  // Assuming each medication has a `name` and `dosage` field\r\n            return `${index + 1}. ${name} - Dosage: ${dosage}`;\r\n        }).join(\"\\n\");\r\n        response += `\\n\\n${languages[language].askDosage}`;\r\n    } else if (medicineTaken) {\r\n        const isCorrectMedication = medications.some(med => \r\n            medicineTaken.toLowerCase().includes(med.name.toLowerCase())\r\n        );\r\n\r\n        if (isCorrectMedication) {\r\n            const correctMed = medications.find(med => \r\n                medicineTaken.toLowerCase().includes(med.name.toLowerCase())\r\n            );\r\n            response += languages[language].correctMedication.replace(\"{0}\", medicineTaken);\r\n            response += ` Dosage: ${correctMed.dosage}`;  // Adding correct dosage information\r\n        } else {\r\n            response += languages[language].incorrectMedication.replace(\"{0}\", medicineTaken);\r\n            response += `\\n\\n${languages[language].recommendMedication}\\n\\n`;\r\n            response += medications.map((medication, index) => {\r\n                const { name, dosage } = medication;\r\n                return `${index + 1}. ${name} - Dosage: ${dosage}`;\r\n            }).join(\"\\n\");\r\n\r\n            setCurrentMedication(medications)\r\n        }\r\n    }\r\n\r\n    return response;\r\n};\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (input.trim() === \"\") return\r\n\r\n    const userMessage = { text: input, sender: \"user\" }\r\n    setMessages(prev => [...prev, userMessage])\r\n\r\n    let botResponse \r\n\r\n    const lowerInput = input.toLowerCase()\r\n    if (\r\n      lowerInput === \"hello\" || \r\n      lowerInput === \"hi\" || \r\n      lowerInput === \"Hie\" ||\r\n      lowerInput === \"नमस्ते\" || // Hindi\r\n      lowerInput === \"नमस्कार\" // Marathi\r\n    ) {\r\n      botResponse = { text: languages[language].greeting, sender: \"bot\" }\r\n    } else if (\r\n      lowerInput === \"thank you\" || \r\n      lowerInput === \"thanks\" ||\r\n      lowerInput === \"धन्यवाद\" || // Hindi\r\n      lowerInput === \"आभार\" // Marathi\r\n    ) {\r\n      botResponse = { text: languages[language].thankYou, sender: \"bot\" }\r\n      setPrescriptionEnable(true)\r\n    } else {\r\n      switch (conversationStage) {\r\n        case \"initial\":\r\n          const symptom = findSymptom(input)\r\n          if (symptom) {\r\n            setCurrentSymptom(symptom)\r\n            botResponse = { text: languages[language].askDuration, sender: \"bot\" }\r\n            setConversationStage(\"askingDuration\")\r\n          } else {\r\n            botResponse = { text: languages[language].notFound, sender: \"bot\" }\r\n            setConversationStage(\"initial\")\r\n          }\r\n          break\r\n        case \"askingDuration\":\r\n          botResponse = { text: languages[language].askMedicine, sender: \"bot\" }\r\n          setConversationStage(\"askingMedicine\")\r\n          break\r\n        case \"askingMedicine\":\r\n          const tookMedicine = input.toLowerCase().includes(\"yes\") || \r\n                               input.toLowerCase().includes(\"हां\") || // Hindi\r\n                               input.toLowerCase().includes(\"होय\") // Marathi\r\n          if (tookMedicine) {\r\n            botResponse = { text: languages[language].askWhichMedicine, sender: \"bot\" }\r\n            setConversationStage(\"askingWhichMedicine\")\r\n          } else {\r\n            botResponse = { text: getResponse(currentSymptom, messages[messages.length - 2].text, false, null), sender: \"bot\" }\r\n            setConversationStage(\"initial\")\r\n            // setCurrentSymptom(null)\r\n          }\r\n          break\r\n        case \"askingWhichMedicine\":\r\n          botResponse = { text: getResponse(currentSymptom, messages[messages.length - 4].text, true, input), sender: \"bot\" }\r\n          setConversationStage(\"initial\")\r\n          // setCurrentSymptom(null)\r\n          break\r\n        default:\r\n          botResponse = { text: languages[language].notFound, sender: \"bot\" }\r\n          setConversationStage(\"initial\")\r\n      }\r\n    }\r\n    setMessages(prev => [...prev, botResponse])\r\n    setInput(\"\")\r\n  }\r\n\r\n  const handleLanguageChange = (newLanguage) => {\r\n    setLanguage(newLanguage)\r\n    setMessages([{ text: languages[newLanguage].welcome, sender: \"bot\" }])\r\n    setCurrentSymptom(null)\r\n    setConversationStage(\"initial\")\r\n  }\r\n\r\n  const handleClearChat = () => {\r\n    setMessages([{ text: languages[language].welcome, sender: \"bot\" }])\r\n    setCurrentSymptom(null)\r\n    setConversationStage(\"initial\")\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h2 className=\"title\">MEDICONNECT</h2>\r\n        <div className=\"language-controls\">\r\n          <select onChange={(e) => handleLanguageChange(e.target.value)} defaultValue={language}>\r\n          <option value=\"english\">English</option>\r\n          <option value=\"hindi\">हिंदी</option>\r\n          <option value=\"marathi\">मराठी</option>\r\n          <option value=\"punjabi\">ਪੰਜਾਬੀ</option>\r\n          <option value=\"tamil\">தமிழ்</option>\r\n          </select>\r\n          <button onClick={handleClearChat} className=\"clear-button\" aria-label={languages[language].clearChat}>\r\n            <Trash2 className=\"icon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n \r\n      <div className=\"messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender === \"user\" ? \"user\" : \"admin\"}`}>\r\n            <span className={`message-bubble ${message.sender === \"user\" ? \"user-bubble\" : \"admin-bubble\"}`}>\r\n              {message.text.split('\\n').map((line, i) => (\r\n                <span key={i} className=\"message-line\">{line}</span>\r\n              ))}\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"input-form\">\r\n        <div className=\"input-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder={languages[language].placeholder}\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            aria-label={languages[language].placeholder}\r\n            className=\"input\"\r\n          />\r\n          <button type=\"submit\" className=\"send-button\" aria-label=\"Send message\">\r\n            <Send className=\"icon\" />\r\n            <span className=\"sr-only\">Send</span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"disclaimer\">{languages[language].disclaimer}</div>\r\n    </div>\r\n    {prescriptionEnable && <div>\r\n        <Prescription symptoms={currentSymptom} remedies={currentRemedies} medications={currentMedication} />\r\n      </div> }\r\n    <div>\r\n        {currentSymptom && <VideoRecommendations symptom={currentSymptom} /> }\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MEDICONNECTChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}